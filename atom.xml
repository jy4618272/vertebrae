<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Vertebrae framework]]></title>
  <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/atom.xml" rel="self"/>
  <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/"/>
  <updated>2012-07-12T11:35:43-07:00</updated>
  <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/</id>
  <author>
    <name><![CDATA[Bill Heaton]]></name>
    <email><![CDATA[pixelhandler@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vertebrae front-end framework built with Backbone.js and RequireJS using AMD]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/vertebrae-front-end-framework-built-with-backbone-dot-js-and-requirejs-using-amd/2012/05/23/"/>
    <updated>2012-05-23T12:59:00-07:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/vertebrae-front-end-framework-built-with-backbone-dot-js-and-requirejs-using-amd/2012/05/vertebrae-front-end-framework-built-with-backbone-dot-js-and-requirejs-using-amd</id>
    <content type="html"><![CDATA[<p><strong>Vertebrae</strong> provides <em>AMD</em> structure and additional objects for extending <em>Backbone.js</em> as an application framework.</p>

<ul>
<li>Github source : <a href="https://github.com/hautelook/vertebrae">https://github.com/hautelook/vertebrae</a></li>
</ul>


<h3>The plan: build an application, mostly with open source libraries</h3>

<p>Following a review of many MV* front-end frameworks/libraries, such as Ember, JavaScriptMVC, Spine, Knockout, and Backbone.js our team decided to begin building a framework with Backbone.js, RequireJS, Underscore.js, jQuery, Mustache.js with code organized in packages of (AMD) modules, see previous post: <a href="http://www.hautelooktech.com/2012/02/01/optimize-and-build-a-backbone-js-javascript-application-with-require-js-using-packages/" title="Organize Backbone.js application using packages">Optimize and Build a Backbone.js JavaScript application with Require.JS using Packages</a>&#8230;</p>

<h4>We needed to add some logic on top of the chosen stack of libraries</h4>

<p>The libraries we selected provide: module loading, dependency management, application structure (for models, collections, views and routes), asynchronous interactions with API, various utilities and objects to manage asynchronous behaviors, e.g. (Promises) Deferreds, Callbacks. The remaining logic needed to complete the application include:</p>

<ul>
<li>An object (collection) to manage state(s) in the single-page application;</li>
<li>A layout manager to present, arrange/transition and clear views, and</li>
<li>Controllers which respond to routes, get/set application state, and hand off views and models/collections to layout manager.</li>
</ul>


<p>The project goals include:</p>

<ul>
<li>Modules for code organization (a module should have a single responsibility)</li>
<li>MVC structure for separation of concerns</li>
<li>Dependency management using a script loader</li>
<li>Build tools for optimization in packages which should support various experiences in the app</li>
<li>Well documented and actively used open source libraries</li>
<li>Framework code should have unit tests, build framework by writing unit tests.</li>
<li>Solutions for managing asynchronous behaviors, e.g. Promises</li>
</ul>


<p><em>We are using: RequireJS, Underscore.js, jQuery, Backbone.js, Mustache.js; and for BDD&#8230; Jasmine, Sinon, jQuery-Jasmine.</em></p>

<h4>Solutions</h4>

<p><strong>Application state manager</strong></p>

<p>The application manager stores data in memory (collection) and also persists data in browser storage to provide a resource for storing and retrieving data/metadata. The application states collection also provides data (state) to reconstruct a page (layout view) based on previous interactions (e.g. selected tab, active views, etc.). The application state manager provides a strategy for resources to retrieve state for a common interface for localStorage, sessionStorage, or a cookie; also sets an <code>expires</code> property.</p>

<p>Also, data used to bootstrap a page can be stored as well, e.g. user/visitor information (items in cart, etc.), data that is reused for many pages, interactions on a page that should be recalled when a user revisits the page.</p>

<p><strong>Layout manager</strong></p>

<p>The layout manager has one or many views as well as document (DOM) <code>destinations</code> for each (rendered) view. A page may transition between views, so the layout manager keeps track of view states, e.g. rendered, not-rendered, displayed, not-displayed. The layout manager can load and render (detached) views that a user/visitor is very likely to request, e.g. tab changes on page. The transition between view states is managed by this object. An entire layout may be cleared so that view objects and their bindings are removed, preparing these objects for garbage collection (preventing memory leaks). The layout manager also communicates view state with controller(s).</p>

<p><strong>Controller</strong></p>

<p>A controller object is called by a route handler function, is responsible for getting relevant state (application models), and does the work to construct a page (layout); also responsible for setting state when routes change. The controller passes dependent data (models/collections) and constructed view objects for a requested page to the layout manager. As a side-effect the use of controllers prevents the routes object from becoming bloated and tangled. A route should map to a controller which then kicks off the page view, keeping the route handling functions lean.</p>

<h2>Behavior Driven Development -</h2>

<p>We made the decision to develop the framework using behavior driven development. Jamsine is the test framework we selected, below are the specs that were used to discover the solutions for our need to have the additional logic we wanted to add on top of the open source stack of libraries&#8230;</p>

<h3>Specs</h3>

<p><strong>Application state manager specs</strong><br/>
(an model object to manage state within the single-page application)</p>

<p>should use options for persistent storage of JSON data<br/>
should reference stored data with string name, e.g. route name<br/>
should have expiration for data objects that are persisted in localStorage<br/>
should store (in memory) reference to model/collection objects for reuse<br/>
should be a singleton object<br/>
should provide strategy for data retrieval (memory/storage/api)<br/>
should store view state of page layouts</p>

<p><strong>Layout manager specs</strong><br/>
(presents, arranges, transitions and clears views)</p>

<p>should use ‘destination’ property for location on dom to show each view
should keep track of current state for view objects, e.g. not-rendered, shown, hidden
should lazy/load or render hidden (detached) views within a layout
should have show and close methods to render and display a view
should manage transition between views within a layout scheme
should close (destroy) managed views/bindings within a layout (e.g. on transition to new layout)
should have access to view’s deferred object (returned on render) for asynchronous display
should have option to display layout when all views’ deferreds are resolved or as ready</p>

<p><strong>Controller specs</strong><br/>
(gets/sets application state, and delegates work to a layout manager object, used within route handlers)</p>

<p>should get data from application state manager object<br/>
should initialize views/models with relevant data received from application state manager<br/>
should call layout manager with arguments including relevant views/data<br/>
should send data to manager when route changes to store view state or dependent data<br/>
should receive data from view objects which publish change in view state</p>

<h2>Views:</h2>

<p>We studied many posts on the topic of Backbone.js and came up with a set of views that will support all the work we needed and provide some patterns to reuse in our application&#8230;</p>

<p><strong><code>BaseView</code>, <code>CollectionView</code>, <code>SectionView</code>, <code>LayoutView</code> (Manages Sections)</strong></p>

<p>All the views extend the BaseView which extends the Backbone.View object.</p>

<h3>Base View</h3>

<p>A view object to construct a standard view with common properties and utilties The base view extends Backbone.View adding methods for resolving deferreds,  rendering, decorating data just in time for rendering, adding child views to  form a composite of views under one view object, add a destroy method.</p>

<h3>Collection View</h3>

<p>Manages rendering many views with a collection. The CollectionView extends BaseView and is intended for rendering a collection. A item view is required for rendering within each iteration over the models. This was a great source for the CollectionView: <a href="http://liquidmedia.ca/blog/2011/02/lib-js-part-3/">http://liquidmedia.ca/blog/2011/02/lib-js-part-3/</a></p>

<h3>Section View</h3>

<p>View object to track view&#8217;s state &#8216;not-rendered&#8217;, &#8216;rendered&#8217;, &#8216;not-displayed&#8217;, &#8216;displayed&#8217;; can be mixed in to another view type, e.g. CollectionView.</p>

<p>A section view is the required view object for a layout view which expects views to track their own state. This view may be extended as need. to use in a layout, perhaps adding the Section prototype properties to another view.</p>

<h3>Layout Manager View</h3>

<p>Presents, arranges, transitions and clears views</p>

<p>The layout manager has one or many views as well as document (DOM)  destinations for each (rendered) view. A page may transition between  many views, so the layout manager keeps track of view states, e.g.  &#8216;not-rendered&#8217;, &#8216;rendered&#8217;, &#8216;not-displayed&#8217;, &#8216;displayed&#8217;.</p>

<p>The layout manager can lazy load and render (detached) views that a member is very likely to request, e.g. tab changes on events page. The transition between view states is managed by this object. An entire layout may be cleared so that view objects and their bindings are removed, preparing these objects for garbage collection (preventing memory leaks). The layout manager also communicates view state with controller(s).</p>

<h2>Models:</h2>

<p><strong><code>BaseModel</code>, <code>ApplicationState</code></strong></p>

<h3>Application State Model</h3>

<p>A model object to manage state within the single-page application Attributes: {String} <code>name</code>, {Object} <code>data</code>, {String} <code>storage</code>, {Date} <code>expires</code></p>

<p>All the models extend the BaseModel which extends the Backbone.Model object.</p>

<h2>Collections</h2>

<p><strong><code>BaseCollection</code>, <code>ApplicationStates</code></strong></p>

<h3>Application State Collection</h3>

<p>A collection object to reference various states in the application.</p>

<p>The application manager stores data in memory and also persists data in browser storage to provide a resource for common data/metadata. Also provides data (state) to reconstruct the page views based on previous interactions (e.g. selected tab, applied filters). The application state manager provides a strategy for resources to retrieve state.</p>

<p>All the collections extend the BaseCollection which extends the Backbone.Collection object.</p>

<h2>Syncs:</h2>

<p><strong>syncFactory, application-state, storageFactory</strong></p>

<p>We have a sync to use localStorage, sessionStorage, or a cookie using the same interface. The application state manager (collection) uses a specific sync object for the browser storage options.</p>

<h2>Utils:</h2>

<p><strong>ajax-options, docCookies, debug, storage, shims, lib [checkType, duckTypeCheck, Channel (pub/sub), loadCss, formatCase, formatMoney]</strong></p>

<p>We put any of our utilities into a library module.</p>

<h2>Controller</h2>

<p>A controller object should called within a route handler function, and may be responsible for getting relevant state (application models) to generate a page (layout), (also responsible for setting state when routes change). The controller passes dependent data (models/collections) and constructed view objects for a requested page to the layout manager. As a side-effect the use of controllers prevents the routes object from becoming bloated and tangled. A route should map to a controller which then kicks off the page view, keeping the route handling functions lean.</p>

<h2>Facade</h2>

<p>Vendor libraries and specific methods used in the framework are required in the facade, and referenced from the facade module in the views, models, collections, lib and other objects in the framework.</p>

<h2>AMD - Asynchronous Module Definition</h2>

<p>The the examples below show how we are using facade module as a dependency. RequireJS has various options for the syntax you can use to manage dependencies, below are a couple we use:</p>

<pre><code>define(['facade','utils'], function (facade, utils) {

    var ModuleName,
        // References to objects nested in dependencies
        Backbone = facade.Backbone,
        $ = facade.$,
        _ = facade._,
        lib = utils.lib;

    ModuleName = DO SOMETHING HERE

    return ModuleName;
});


define(['require','facade','utils'], function (require) {

    var ModuleName,
        // Dependencies
        facade = require('facade'),
        utils = require('utils'),
        // References to objects nested in dependencies
        Backbone = facade.Backbone,
        $ = facade.$,
        _ = facade._,
        lib = utils.lib;

    ModuleName = DO SOMETHING HERE

    return ModuleName;
});
</code></pre>

<p>References:<br/>
  * <a href="https://github.com/amdjs/amdjs-api/wiki/AMD" title="AMD spec">AMD spec</a>
  * <a href="http://requirejs.org/docs/whyamd.html" title="RequireJS why AMD">RequireJS why AMD</a>
  * <a href="http://requirejs.org/docs/whyamd.html#amd" title="RequireJS AMD">RequireJS AMD</a></p>

<h2>Docs</h2>

<p>View docs on the demo site, hosted on Heroku at:</p>

<p><a href="http://vertebrae-framework.herokuapp.com/docs/">http://vertebrae-framework.herokuapp.com/docs/</a><br/>
<a href="http://vertebrae-framework.herokuapp.com/models/docs/">http://vertebrae-framework.herokuapp.com/models/docs/</a><br/>
<a href="http://vertebrae-framework.herokuapp.com/collections/docs/">http://vertebrae-framework.herokuapp.com/collections/docs/</a><br/>
<a href="http://vertebrae-framework.herokuapp.com/syncs/docs/">http://vertebrae-framework.herokuapp.com/syncs/docs/</a><br/>
<a href="http://vertebrae-framework.herokuapp.com/utils/docs/">http://vertebrae-framework.herokuapp.com/utils/docs/</a><br/>
<a href="http://vertebrae-framework.herokuapp.com/views/docs/">http://vertebrae-framework.herokuapp.com/views/docs/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World Code Demo using Layout Manager and Controller]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/hello-world-code-demo-using-layout-manager-and-controller/2012/04/30/"/>
    <updated>2012-04-30T17:17:00-07:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/hello-world-code-demo-using-layout-manager-and-controller/2012/04/hello-world-code-demo-using-layout-manager-and-controller</id>
    <content type="html"><![CDATA[<h1>Overview of Hello World &#8220;Layout&#8221;</h1>

<p>Code demonstration of adding a route, route handler function in App, new &#8220;hello&#8221; package with a template and view. The package controller file <em>hello.js</em> extends the Controller.prototype and is based on a (template) copy of the Controller.prototype in <em>src/controller.js</em>. The WelcomeSectionView prototype extends the SectionView prototype (class) and requries both <strong>name</strong> and <strong>destination</strong> properties when instantiated. The <em>application.js</em> method &#8216;showHello&#8217; is mapped to the route &#8216;/hello/:name&#8217; and the showHello method instantiates a controller object</p>

<p>Files edited in the application:</p>

<pre><code>src/application.js  
src/main.js  
</code></pre>

<p>Files added as a new package:</p>

<pre><code>src/packages/hello.js  [returns: HelloController]  
src/packages/hello/models/welcome.js  
src/packages/hello/templates/layout.html  [HTML used by layout, has section element]  
src/packages/hello/templates/welcome.html  
src/packages/hello/views/welcome.js  [returns: WelcomeSectionView, with article element] 
src/packages/hello/welcome.css
</code></pre>

<h2>New Route added in src/application.js</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="s1">&#39;hello/:name&#39;</span><span class="o">:</span> <span class="s1">&#39;showHello&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>New Package added in src/main.js</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// ** Packages **</span>
</span><span class='line'><span class="s1">&#39;hello&#39;</span>        <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/packages/hello&#39;</span><span class="p">),</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Add dependency to application.js</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span> <span class="cm">/*... ,*/</span> <span class="s2">&quot;hello&quot;</span> <span class="p">],</span> <span class="kd">function</span> <span class="p">(</span> <span class="cm">/*... ,*/</span> <span class="nx">HelloController</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// BTW this is the AMD module format with &quot;hello&quot; file as dependecy  </span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Add Method for new &#8216;/hello/:name&#8217; route handler</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">showHello</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">controller</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">HelloController</span><span class="p">({</span>
</span><span class='line'>        <span class="s2">&quot;params&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="nx">name</span> <span class="p">},</span>
</span><span class='line'>        <span class="s2">&quot;route&quot;</span><span class="o">:</span> <span class="s2">&quot;/hello&quot;</span> <span class="o">+</span> <span class="nx">name</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;appStates&quot;</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">states</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">},</span>
</span></code></pre></td></tr></table></div></figure>


<p>The parameters hash is added as an option above for the controller object to deal with.</p>

<figure class='code'><figcaption><span> (layout.html)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello/templates/layout.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section</span> <span class="na">id=</span><span class="s">&quot;welcome&quot;</span><span class="nt">&gt;&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (hello.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Hello Controller</span>
</span><span class='line'><span class="c1">// ---------------</span>
</span><span class='line'><span class="c1">// module as controller for &#39;hello&#39; package</span>
</span><span class='line'><span class="c1">// Returns {HelloController} constructor</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>        <span class="s2">&quot;vendor&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;controller&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;models&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;views&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;text!hello/templates/layout.html&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;hello/models/welcome&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;hello/views/welcome&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;utils&quot;</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span>
</span><span class='line'>        <span class="nx">vendor</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Controller</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">models</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">views</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">layoutTemplate</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">WelcomeModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">WelcomeSectionView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">utils</span>
</span><span class='line'>        <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">HelloController</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">LayoutView</span> <span class="o">=</span> <span class="nx">views</span><span class="p">.</span><span class="nx">LayoutView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">BaseModel</span> <span class="o">=</span> <span class="nx">models</span><span class="p">.</span><span class="nx">BaseModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">$</span> <span class="o">=</span> <span class="nx">vendor</span><span class="p">.</span><span class="nx">$</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">_</span> <span class="o">=</span> <span class="nx">vendor</span><span class="p">.</span><span class="nx">_</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">debug</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">debug</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Channel</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">baselib</span><span class="p">.</span><span class="nx">Channel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">cssArr</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>            <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s2">&quot;/packages/hello/welcome.css&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">HelloController</span> <span class="o">=</span> <span class="nx">Controller</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span>    <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">Channel</span><span class="p">(</span><span class="s1">&#39;load:css&#39;</span><span class="p">).</span><span class="nx">publish</span><span class="p">(</span><span class="nx">cssArr</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">handleOptions</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">handleDeferreds</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">setupSections</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">welcomeView</span><span class="p">,</span> <span class="nx">welcomeModel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">welcomeModel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WelcomeModel</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">welcomeView</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WelcomeSectionView</span><span class="p">({</span>
</span><span class='line'>                    <span class="nx">model</span><span class="o">:</span> <span class="nx">welcomeModel</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Welcome&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">destination</span><span class="o">:</span> <span class="s1">&#39;#welcome&#39;</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;hello controller setup welcomeView&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">sections</span><span class="p">[</span><span class="s2">&quot;Welcome&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">welcomeView</span><span class="p">;</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">meta</span><span class="p">.</span><span class="nx">activeViews</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;Welcome&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">setupScheme</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">scheme</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sections</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">meta</span><span class="p">.</span><span class="nx">activeViews</span><span class="p">[</span><span class="mi">0</span><span class="p">]]);</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">setupLayout</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">helloLayout</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">helloLayout</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">LayoutView</span><span class="p">({</span>
</span><span class='line'>                    <span class="nx">scheme</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">scheme</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">destination</span><span class="o">:</span> <span class="s2">&quot;#content&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="c1">// require a html page layout template with text! prefix</span>
</span><span class='line'>                    <span class="nx">template</span><span class="o">:</span> <span class="nx">layoutTemplate</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">displayWhen</span><span class="o">:</span> <span class="s2">&quot;ready&quot;</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">layout</span> <span class="o">=</span> <span class="nx">helloLayout</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">layout</span><span class="p">;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">handleDeferreds</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">controller</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">$</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span>
</span><span class='line'>                    <span class="kc">null</span> <span class="c1">// or deferred objects, comma separated e.g. this.eventData.request </span>
</span><span class='line'>                <span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">controller</span><span class="p">.</span><span class="nx">setupSections</span><span class="p">();</span>
</span><span class='line'>                    <span class="nx">controller</span><span class="p">.</span><span class="nx">setupScheme</span><span class="p">();</span>
</span><span class='line'>                    <span class="nx">controller</span><span class="p">.</span><span class="nx">setupLayout</span><span class="p">().</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">handleOptions</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">params</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">this</span><span class="p">.</span><span class="nx">params</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="nx">Controller</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">handleOptions</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">HelloController</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (welcome.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello/models/welcome.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Welcome Model</span>
</span><span class='line'><span class="c1">// -------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Requires define  </span>
</span><span class='line'><span class="c1">// Return {WelcomeModel} model constructor object  </span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;models&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">models</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">WelcomeModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">BaseModel</span> <span class="o">=</span> <span class="nx">models</span><span class="p">.</span><span class="nx">BaseModel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">WelcomeModel</span> <span class="o">=</span> <span class="nx">BaseModel</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">defaults</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">name</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">WelcomeModel</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (welcome.html)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello/templates/welcome.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;p&gt;</span>Hello {{name}}!<span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (welcome.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello/views/welcome.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Welcome Section View</span>
</span><span class='line'><span class="c1">// ------------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Package Hello</span>
</span><span class='line'><span class="c1">// Requires define</span>
</span><span class='line'><span class="c1">// Returns {WelcomeSectionView} constructor</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Contrete prototype extends SectionView.prototype (class) to be used in a LayoutView.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>        <span class="s1">&#39;views&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;hello/models/welcome&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;text!hello/templates/welcome.html&#39;</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span>
</span><span class='line'>        <span class="nx">views</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">WelcomeModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">welcomeTemplate</span>
</span><span class='line'>        <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">WelcomeSectionView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">SectionView</span> <span class="o">=</span> <span class="nx">views</span><span class="p">.</span><span class="nx">SectionView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">WelcomeSectionView</span> <span class="o">=</span> <span class="nx">SectionView</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">tagName</span><span class="o">:</span> <span class="s1">&#39;article&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;welcome&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">model</span><span class="o">:</span> <span class="nx">WelcomeModel</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">template</span><span class="o">:</span> <span class="nx">welcomeTemplate</span> <span class="c1">// &quot;Hello {{name}}!&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">WelcomeSectionView</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (welcome.css)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello/welcome.css'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/* Welcome styles */</span>
</span><span class='line'>
</span><span class='line'><span class="nf">#welcome</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">margin</span><span class="o">:</span> <span class="m">0</span> <span class="m">50</span><span class="o">%</span><span class="p">;</span>
</span><span class='line'>    <span class="k">padding</span><span class="o">:</span> <span class="m">5em</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">font</span><span class="o">:</span> <span class="k">normal</span> <span class="m">2em</span><span class="o">/</span><span class="m">1.5em</span> <span class="k">monospace</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.article</span> <span class="nt">p</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">color</span><span class="o">:</span> <span class="nb">blue</span><span class="p">;</span>
</span><span class='line'>    <span class="k">text-align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Part 2: Get JSON data for content using AJAX</h2>

<h3>To get the &#8216;About&#8217; section data a fixture (JSON file) was added in the test directory.</h3>

<figure class='code'><figcaption><span> (101)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/test/fixtures/hello/101'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;_links&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;self&quot;</span><span class="o">:</span> <span class="s2">&quot;/test/fixtures/hello/101&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;shop&quot;</span><span class="o">:</span> <span class="s2">&quot;http://www.hautelook.com/&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s2">&quot;title&quot;</span><span class="o">:</span> <span class="s2">&quot;About HauteLook&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;content&quot;</span><span class="o">:</span> <span class="s2">&quot;Welcome to HauteLook, where you will discover thousands of the top fashion and lifestyle brands at amazing savings. Each day at 8 AM Pacific, shop new sale events featuring the best names in women&#39;s and men&#39;s fashion and accessories, beauty, kids&#39; apparel and toys, and home décor at up to 75% off. Membership is free and everyone is welcome!&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;callToAction&quot;</span><span class="o">:</span> <span class="s2">&quot;To start shopping, go to: &lt;a href=\&quot;www.hautelook.com\&quot;&gt;www.hautelook.com&lt;/a&gt;&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>application.js updated with&#8230;</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">routes</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s1">&#39;hello&#39;</span><span class="o">:</span> <span class="s1">&#39;showHello&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;hello/&#39;</span><span class="o">:</span> <span class="s1">&#39;showHello&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;hello/:name&#39;</span><span class="o">:</span> <span class="s1">&#39;showHello&#39;</span>
</span><span class='line'><span class="p">},</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">showHello</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">controller</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">HelloController</span><span class="p">({</span>
</span><span class='line'>        <span class="s2">&quot;params&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="nx">name</span> <span class="p">},</span>
</span><span class='line'>        <span class="s2">&quot;route&quot;</span><span class="o">:</span> <span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;/hello&quot;</span> <span class="o">+</span> <span class="nx">name</span> <span class="o">:</span> <span class="s2">&quot;/hello&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;appStates&quot;</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">states</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;useFixtures&quot;</span> <span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">},</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Some files have changed&#8230;</h3>

<pre><code>src/packages/hello.js  
src/packages/hello/models/about.js  
src/packages/hello/templates/about.html  
src/packages/hello/templates/layout.html  
src/packages/hello/templates/welcome.html  
src/packages/hello/views/about.js  
src/packages/hello/views/welcome.js  
src/packages/hello/welcome.css
</code></pre>

<p>See the source code below and see how the new &#8220;About&#8221; section view is added in addition to the simple hello <em>name</em> view created by the welcome view.</p>

<figure class='code'><figcaption><span> (layout.html)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello2/templates/layout.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;welcome&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;section</span> <span class="na">id=</span><span class="s">&quot;greeting&quot;</span><span class="nt">&gt;&lt;/section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;section</span> <span class="na">id=</span><span class="s">&quot;about&quot;</span><span class="nt">&gt;&lt;/section&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (hello2.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello2.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Hello Controller</span>
</span><span class='line'><span class="c1">// ---------------</span>
</span><span class='line'><span class="c1">// module as controller for &#39;hello&#39; package</span>
</span><span class='line'><span class="c1">// Returns {HelloController} constructor</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>        <span class="s2">&quot;vendor&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;controller&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;models&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;views&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;text!hello/templates/layout.html&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;hello/models/welcome&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;hello/views/welcome&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;hello/models/about&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;hello/views/about&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;utils&quot;</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span>
</span><span class='line'>        <span class="nx">vendor</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Controller</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">models</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">views</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">layoutTemplate</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">WelcomeModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">WelcomeSectionView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">AboutModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">AboutSectionView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">utils</span>
</span><span class='line'>        <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">HelloController</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">LayoutView</span> <span class="o">=</span> <span class="nx">views</span><span class="p">.</span><span class="nx">LayoutView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">BaseModel</span> <span class="o">=</span> <span class="nx">models</span><span class="p">.</span><span class="nx">BaseModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">$</span> <span class="o">=</span> <span class="nx">vendor</span><span class="p">.</span><span class="nx">$</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">_</span> <span class="o">=</span> <span class="nx">vendor</span><span class="p">.</span><span class="nx">_</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">debug</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">debug</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Channel</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">baselib</span><span class="p">.</span><span class="nx">Channel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">cssArr</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>            <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s2">&quot;/packages/hello/welcome.css&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">HelloController</span> <span class="o">=</span> <span class="nx">Controller</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span>    <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">Channel</span><span class="p">(</span><span class="s1">&#39;load:css&#39;</span><span class="p">).</span><span class="nx">publish</span><span class="p">(</span><span class="nx">cssArr</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">handleOptions</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">setupSections</span><span class="p">();</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">handleDeferreds</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">setupWelcomeSection</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">welcomeView</span><span class="p">,</span> <span class="nx">welcomeModel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">welcomeModel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WelcomeModel</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">welcomeView</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WelcomeSectionView</span><span class="p">({</span>
</span><span class='line'>                    <span class="nx">model</span><span class="o">:</span> <span class="nx">welcomeModel</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Welcome&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">destination</span><span class="o">:</span> <span class="s1">&#39;#greeting&#39;</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;hello controller setup welcomeView&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">sections</span><span class="p">[</span><span class="s2">&quot;Welcome&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">welcomeView</span><span class="p">;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">setupAboutSection</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">aboutView</span><span class="p">,</span> <span class="nx">aboutModel</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">webservice</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">webServices</span><span class="p">.</span><span class="nx">hello</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">aboutModel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AboutModel</span><span class="p">(</span>
</span><span class='line'>                    <span class="p">{</span><span class="nx">id</span><span class="o">:</span> <span class="mi">101</span><span class="p">},</span> <span class="c1">// attributes</span>
</span><span class='line'>                    <span class="p">{</span><span class="nx">urlRoot</span><span class="o">:</span> <span class="nx">webservice</span><span class="p">}</span> <span class="c1">// options</span>
</span><span class='line'>                <span class="p">);</span>
</span><span class='line'>                <span class="nx">aboutModel</span><span class="p">.</span><span class="nx">request</span> <span class="o">=</span> <span class="nx">aboutModel</span><span class="p">.</span><span class="nx">fetch</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">aboutView</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AboutSectionView</span><span class="p">({</span>
</span><span class='line'>                    <span class="nx">model</span><span class="o">:</span> <span class="nx">aboutModel</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;About&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">destination</span><span class="o">:</span> <span class="s1">&#39;#about&#39;</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;hello controller setup aboutView&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">sections</span><span class="p">[</span><span class="s2">&quot;About&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">aboutView</span><span class="p">;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">setupSections</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">params</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nx">params</span> <span class="o">&amp;&amp;</span> <span class="nx">params</span><span class="p">.</span><span class="nx">name</span> <span class="o">&amp;&amp;</span> <span class="nx">_</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">params</span><span class="p">.</span><span class="nx">name</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">this</span><span class="p">.</span><span class="nx">setupWelcomeSection</span><span class="p">();</span>
</span><span class='line'>                    <span class="k">this</span><span class="p">.</span><span class="nx">meta</span><span class="p">.</span><span class="nx">activeViews</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;Welcome&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">setupAboutSection</span><span class="p">();</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">meta</span><span class="p">.</span><span class="nx">activeViews</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;About&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">setupScheme</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">params</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">meta</span><span class="p">.</span><span class="nx">activeViews</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">this</span><span class="p">.</span><span class="nx">scheme</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sections</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">meta</span><span class="p">.</span><span class="nx">activeViews</span><span class="p">[</span><span class="nx">i</span><span class="p">]]);</span>
</span><span class='line'>                <span class="p">};</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">setupLayout</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">helloLayout</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">helloLayout</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">LayoutView</span><span class="p">({</span>
</span><span class='line'>                    <span class="nx">scheme</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">scheme</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">destination</span><span class="o">:</span> <span class="s2">&quot;#content&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="c1">// require a html page layout template with text! prefix</span>
</span><span class='line'>                    <span class="nx">template</span><span class="o">:</span> <span class="nx">layoutTemplate</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">displayWhen</span><span class="o">:</span> <span class="s2">&quot;ready&quot;</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">layout</span> <span class="o">=</span> <span class="nx">helloLayout</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">layout</span><span class="p">;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">handleDeferreds</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">controller</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>                    <span class="nx">aboutRequest</span> <span class="o">=</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sections</span><span class="p">[</span><span class="s2">&quot;About&quot;</span><span class="p">])</span> <span class="o">?</span> <span class="k">this</span><span class="p">.</span><span class="nx">sections</span><span class="p">[</span><span class="s2">&quot;About&quot;</span><span class="p">].</span><span class="nx">model</span><span class="p">.</span><span class="nx">request</span> <span class="o">:</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">$</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">aboutRequest</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">controller</span><span class="p">.</span><span class="nx">setupScheme</span><span class="p">();</span>
</span><span class='line'>                    <span class="nx">controller</span><span class="p">.</span><span class="nx">setupLayout</span><span class="p">().</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">handleOptions</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">params</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">this</span><span class="p">.</span><span class="nx">params</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="nx">Controller</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">handleOptions</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">HelloController</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (welcome.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello2/models/welcome.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Welcome Model</span>
</span><span class='line'><span class="c1">// -------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Requires define  </span>
</span><span class='line'><span class="c1">// Return {WelcomeModel} model constructor object  </span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;models&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">models</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">WelcomeModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">BaseModel</span> <span class="o">=</span> <span class="nx">models</span><span class="p">.</span><span class="nx">BaseModel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">WelcomeModel</span> <span class="o">=</span> <span class="nx">BaseModel</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">defaults</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">name</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">WelcomeModel</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (welcome.html)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello2/templates/welcome.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;code&gt;</span>Hello {{name}}!<span class="nt">&lt;/code&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (welcome.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello2/views/welcome.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Welcome Section View</span>
</span><span class='line'><span class="c1">// ------------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Package Hello</span>
</span><span class='line'><span class="c1">// Requires define</span>
</span><span class='line'><span class="c1">// Returns {WelcomeSectionView} constructor</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Contrete prototype extends SectionView.prototype (class) to be used in a LayoutView.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>        <span class="s1">&#39;views&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;hello/models/welcome&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;text!hello/templates/welcome.html&#39;</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span>
</span><span class='line'>        <span class="nx">views</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">WelcomeModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">welcomeTemplate</span>
</span><span class='line'>        <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">WelcomeSectionView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">SectionView</span> <span class="o">=</span> <span class="nx">views</span><span class="p">.</span><span class="nx">SectionView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">WelcomeSectionView</span> <span class="o">=</span> <span class="nx">SectionView</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">tagName</span><span class="o">:</span> <span class="s1">&#39;article&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;greeting&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">model</span><span class="o">:</span> <span class="nx">WelcomeModel</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">template</span><span class="o">:</span> <span class="nx">welcomeTemplate</span> <span class="c1">// &quot;Hello {{name}}!&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">WelcomeSectionView</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (about.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello2/models/about.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Welcome Model</span>
</span><span class='line'><span class="c1">// -------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Requires define  </span>
</span><span class='line'><span class="c1">// Return {AboutModel} model constructor object  </span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;models&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">models</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">AboutModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">BaseModel</span> <span class="o">=</span> <span class="nx">models</span><span class="p">.</span><span class="nx">BaseModel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">AboutModel</span> <span class="o">=</span> <span class="nx">BaseModel</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">attributes</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">BaseModel</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">initialize</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">attributes</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">defaults</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">_links</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s2">&quot;self&quot;</span><span class="o">:</span> <span class="s2">&quot;/test/fixtures/hello/101&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;shop&quot;</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="nx">title</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">callToAction</span> <span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">AboutModel</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (about.html)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello2/templates/about.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>{{title}}<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;code&gt;</span>{{content}}<span class="nt">&lt;/code&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span><span class='line'>    <span class="nt">&lt;strong&gt;</span>{{{callToAction}}}<span class="nt">&lt;/strong&gt;</span>
</span><span class='line'><span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (about.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello2/views/about.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// About &#39;101&#39; Section View</span>
</span><span class='line'><span class="c1">// ------------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Package Hello</span>
</span><span class='line'><span class="c1">// Requires define</span>
</span><span class='line'><span class="c1">// Returns {AboutSectionView} constructor</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Contrete prototype extends SectionView.prototype (class) to be used in a LayoutView.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>        <span class="s1">&#39;views&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;hello/models/about&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;text!hello/templates/about.html&#39;</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span>
</span><span class='line'>        <span class="nx">views</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">AboutModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">aboutTemplate</span>
</span><span class='line'>        <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">AboutSectionView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">SectionView</span> <span class="o">=</span> <span class="nx">views</span><span class="p">.</span><span class="nx">SectionView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">AboutSectionView</span> <span class="o">=</span> <span class="nx">SectionView</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">tagName</span><span class="o">:</span> <span class="s1">&#39;article&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;about&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">model</span><span class="o">:</span> <span class="nx">AboutModel</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">template</span><span class="o">:</span> <span class="nx">aboutTemplate</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">AboutSectionView</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (welcome.css)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/hello2/welcome.css'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/* Welcome styles */</span>
</span><span class='line'>
</span><span class='line'><span class="nf">#welcome</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">margin</span><span class="o">:</span> <span class="m">0</span> <span class="m">20</span><span class="o">%</span><span class="p">;</span>
</span><span class='line'>    <span class="k">padding</span><span class="o">:</span> <span class="m">5em</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">font</span><span class="o">:</span> <span class="k">normal</span> <span class="m">2em</span><span class="o">/</span><span class="m">1.5em</span> <span class="k">monospace</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nf">#welcome</span> <span class="nt">code</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">margin</span><span class="o">:</span> <span class="m">0</span> <span class="m">0</span> <span class="m">1em</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nf">#welcome</span> <span class="nt">p</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">color</span><span class="o">:</span> <span class="nb">blue</span><span class="p">;</span>
</span><span class='line'>    <span class="k">text-align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Optimize and Build a Backbone.js JavaScript application with Require.JS using Packages]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/optimize-and-build-a-backbone-dot-js-javascript-application-with-require-dot-js-using-packages/2012/01/09/"/>
    <updated>2012-01-09T03:19:00-08:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/optimize-and-build-a-backbone-dot-js-javascript-application-with-require-dot-js-using-packages/2012/01/optimize-and-build-a-backbone-dot-js-javascript-application-with-require-dot-js-using-packages</id>
    <content type="html"><![CDATA[<p>When a JavaScript application is too complex or large to build in a single file, grouping the application’s components into packages allows for script dependencies to download in parallel, and facilitates only loading <strong>packaged</strong> and other modular code as the site experience requires the specific set of dependencies.</p>

<p>Require.JS, the (JavaScript) module loading library, has an <a href="http://requirejs.org/docs/optimization.html" title="Require.JS optimizer">optimizer</a> to build a JavaScript-based application and provides various options. A build profile is the recipe for your build, much like a build.xml file is used to build a project with ANT. The benefit of building with <strong>r.js</strong> not only results in speedy script loading with minified code, but also provides a way to package components of your application.</p>

<ul>
<li><a href="http://requirejs.org/docs/optimization.html#onejs" title="Optimizing one JavaScript file">Optimizing one JavaScript file</a></li>
<li><a href="http://requirejs.org/docs/optimization.html#wholeproject" title="Optimizing a whole project">Optimizing a whole project</a></li>
<li><a href="http://requirejs.org/docs/faq-optimization.html#priority" title="Optimizing a project in layers or packages">Optimizing a project in layers or packages</a></li>
</ul>


<p>In a complex application, organizing code into <em>packages</em> is an attractive build strategy. The build profile in this article is based on an test application currently under development (files list below). The application framework is built with open source libraries. The main objective in this build profile is to optimize an application developed with <a href="http://documentcloud.github.com/backbone/" title="Backbone.js">Backbone.js</a> using modular code, following the <a href="https://github.com/amdjs/amdjs-api/wiki/AMD" title="Asynchronous Module Definition (AMD) wiki page">Asynchronous Module Definition (AMD)</a> format. AMD and Require.JS provide the structure for writing modular code with dependencies. Backbone.js provides the code organization for developing models, views and collections and also interactions with a RESTful API.</p>

<!--more-->


<p>Below is an outline of the application’s file organization, followed by the build profile to build modular (or packaged) layers a JavaScript driven application.</p>

<h3>File organization</h3>

<p>Assume the following directories and file organization, with app.build.js as the build profile (a sibling to both source and release directories). Note that the files in the list below named <em>section</em> can be any component of the application, e.g. <em>header</em>, <em>login</em>)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>.-- app.build.js
</span><span class='line'>|-- app-release
</span><span class='line'>`-- app-src
</span><span class='line'>    |-- collections
</span><span class='line'>    |   |-- base.js
</span><span class='line'>    |   |-- sections-segments.js
</span><span class='line'>    |   `-- sections.js
</span><span class='line'>    |-- docs
</span><span class='line'>    |   `--docco.css
</span><span class='line'>    |-- models
</span><span class='line'>    |   |-- base.js
</span><span class='line'>    |   |-- branding.js
</span><span class='line'>    |   `-- section.js
</span><span class='line'>    |-- packages
</span><span class='line'>    |   |-- header
</span><span class='line'>    |   |   |-- models
</span><span class='line'>    |   |   |   |-- nav.js
</span><span class='line'>    |   |   |   `-- link.js
</span><span class='line'>    |   |   |-- templates
</span><span class='line'>    |   |   |   |-- branding.js
</span><span class='line'>    |   |   |   |-- nav.js
</span><span class='line'>    |   |   |   `-- links.js
</span><span class='line'>    |   |   `-- views
</span><span class='line'>    |   |       |-- nav.js
</span><span class='line'>    |   |       |-- branding.js
</span><span class='line'>    |   |       `-- link.js
</span><span class='line'>    |   |-- header.js
</span><span class='line'>    |   `-- ... more packages here e.g. cart, checkout ...
</span><span class='line'>    |-- syncs
</span><span class='line'>    |   |-- rest
</span><span class='line'>    |   |   `-- sections.js
</span><span class='line'>    |   |-- factory.js
</span><span class='line'>    |   `-- localstorage.js
</span><span class='line'>    |-- test
</span><span class='line'>    |   |-- fixtures
</span><span class='line'>    |   |   `-- sections.json
</span><span class='line'>    |   |-- header
</span><span class='line'>    |   |   |-- index.html
</span><span class='line'>    |   |   `-- spec.js
</span><span class='line'>    |   |-- lib
</span><span class='line'>    |   |   `-- Jasmine
</span><span class='line'>    |   |-- models
</span><span class='line'>    |   |-- utils
</span><span class='line'>    |   |-- global-spec.js
</span><span class='line'>    |-- utils
</span><span class='line'>    |   |-- ajax.js
</span><span class='line'>    |   |-- baselib.js
</span><span class='line'>    |   |-- debug.js
</span><span class='line'>    |   |-- localstorage.js
</span><span class='line'>    |   `-- shims.js
</span><span class='line'>    |-- vendor
</span><span class='line'>    |-- |-- backbone-min.js
</span><span class='line'>    |   |-- jquery-1.7.1.min.js
</span><span class='line'>    |   |-- jquery.mobile-1.0.min.js
</span><span class='line'>    |   |-- json2.js
</span><span class='line'>    |   |-- modernizr-1.6.min.js
</span><span class='line'>    |   |-- mustache.js
</span><span class='line'>    |   |-- require.js
</span><span class='line'>    |   |-- text.js
</span><span class='line'>    |   `-- underscore.js
</span><span class='line'>    |-- views
</span><span class='line'>    |   |-- base.js
</span><span class='line'>    |   `-- collection.js
</span><span class='line'>    |-- application.js
</span><span class='line'>    |-- collections.js
</span><span class='line'>    |-- index.html
</span><span class='line'>    |-- main.js
</span><span class='line'>    |-- models.js
</span><span class='line'>    |-- syncs.js
</span><span class='line'>    |-- utils.js
</span><span class='line'>    |-- vendor.js
</span><span class='line'>    `-- views.js
</span></code></pre></td></tr></table></div></figure>


<h3>Build profile to optimize modular dependencies with code organized in packages</h3>

<p>The build profile can be organized to <a href="http://requirejs.org/docs/faq-optimization.html#priority" title="optimize modular dependencies in packages">divide parallel downloads for various sections of the application</a>.</p>

<p>This strategy demonstrated builds common or site-wide groups of (core) <em>models</em>, <em>views</em>, collections which are extended from a base.js constructor which extends the appropriate backbone method, e.g. Backbone.Model. The <em>packages</em> directory organizes code by section / responsibility, e.g. cart, checkout, etc. Notice that within the example <em>header</em> package the directory structure is similar to the app root directory file structure. A <em>package</em> (of modularized code) has dependencies from the common libraries in your application and also has specific code for the packages execution alone; other packages should not require another packages dependencies. A <em>utils</em> directory has shims, helpers, and common library code to support the application. A <em>syncs</em> directory to define persistence with your RESTful api and/or localStorage. The <em>vendor</em> libraries folder will not be built, there is no need to do so, you may decide to use a CDN (then set these paths to : <em><a href="http://requirejs.org/docs/optimization.html#empty" title="empty:">empty:</a></em>). And finally a <em>test</em> directory for <a href="http://pivotal.github.com/jasmine/" title="Jasmine is a behavior-driven development framework for testing your JavaScript code">Jasmine</a> unit test specs, which may be ignored in the build as well if you choose.</p>

<p>Also notice the there are .js files named the same as the directories, these are the files listed in the paths. these are strategic to group sets of files to build, examples follow the build profile below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">({</span>
</span><span class='line'>    <span class="nx">appDir</span><span class="o">:</span> <span class="s1">&#39;./app-src&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">baseUrl</span><span class="o">:</span> <span class="s1">&#39;./&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">dir</span><span class="o">:</span> <span class="s1">&#39;./app-build&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">optimize</span><span class="o">:</span> <span class="s1">&#39;uglify&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">paths</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// will not build 3rd party code, it&#39;s already built</span>
</span><span class='line'>        <span class="s1">&#39;text&#39;</span>         <span class="o">:</span> <span class="s1">&#39;vendor/text&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;json2&#39;</span>        <span class="o">:</span> <span class="s1">&#39;vendor/json2.min&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;modernizr&#39;</span>    <span class="o">:</span> <span class="s1">&#39;vendor/modernizr-1.6.min&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;jquery&#39;</span>       <span class="o">:</span> <span class="s1">&#39;vendor/jquery-1.7.1&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;jquerymobile&#39;</span> <span class="o">:</span> <span class="s1">&#39;vendor/jquery.mobile-1.0.min.js&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;underscore&#39;</span>   <span class="o">:</span> <span class="s1">&#39;vendor/underscore&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;mustache&#39;</span>     <span class="o">:</span> <span class="s1">&#39;vendor/mustache&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;backbone&#39;</span>     <span class="o">:</span> <span class="s1">&#39;vendor/backbone&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="c1">// files that define dependencies...</span>
</span><span class='line'>        <span class="c1">// ignore vendor libraries, but need a group to do so</span>
</span><span class='line'>        <span class="s1">&#39;vendor&#39;</span>       <span class="o">:</span> <span class="s1">&#39;vendor&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="c1">// application modules/packages these files define dependencies</span>
</span><span class='line'>        <span class="c1">// and may also group modules into objects if needed to require</span>
</span><span class='line'>        <span class="c1">// by groups rather than individual files</span>
</span><span class='line'>        <span class="s1">&#39;utils&#39;</span>        <span class="o">:</span> <span class="s1">&#39;utils&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;models&#39;</span>       <span class="o">:</span> <span class="s1">&#39;models&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;views&#39;</span>        <span class="o">:</span> <span class="s1">&#39;views&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;collections&#39;</span>  <span class="o">:</span> <span class="s1">&#39;collections&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="c1">// packages to build</span>
</span><span class='line'>        <span class="s1">&#39;header&#39;</span>       <span class="o">:</span> <span class="s1">&#39;packages/header&#39;</span>
</span><span class='line'>        <span class="c1">//... more packages</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">modules</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="c1">// Common libraries, Utilities, Syncs, Models, Views, Collections</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;utils&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">exclude</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;vendor&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;syncs&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">exclude</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;vendor&#39;</span><span class="p">,</span> <span class="s1">&#39;utils&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;models&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">exclude</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;vendor&#39;</span><span class="p">,</span> <span class="s1">&#39;utils&#39;</span><span class="p">,</span> <span class="s1">&#39;syncs&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;views&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">exclude</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;vendor&#39;</span><span class="p">,</span> <span class="s1">&#39;utils&#39;</span><span class="p">,</span> <span class="s1">&#39;syncs&#39;</span><span class="p">,</span> <span class="s1">&#39;models&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;collections&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">exclude</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;vendor&#39;</span><span class="p">,</span> <span class="s1">&#39;utils&#39;</span><span class="p">,</span> <span class="s1">&#39;syncs&#39;</span><span class="p">,</span> <span class="s1">&#39;models&#39;</span><span class="p">,</span> <span class="s1">&#39;views&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="c1">// Packages</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;header&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">exclude</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;vendor&#39;</span><span class="p">,</span> <span class="s1">&#39;utils&#39;</span><span class="p">,</span> <span class="s1">&#39;syncs&#39;</span><span class="p">,</span> <span class="s1">&#39;models&#39;</span><span class="p">,</span> <span class="s1">&#39;views&#39;</span><span class="p">,</span> <span class="s1">&#39;collections&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">// ... and so much more ...</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above build profile is designed for balancing scalability and performance.</p>

<p><strong>Examples of the grouped sets of code dependencies</strong></p>

<p>The contents of the vendor.js which is not built into a package may use some <em>no conflict</em> calls as well.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// List of vendor libraries, e.g. jQuery, Underscore, Backbone, etc.  </span>
</span><span class='line'><span class="c1">// this module is used with the r.js optimizer tool during build  </span>
</span><span class='line'><span class="c1">// @see &lt;http://requirejs.org/docs/faq-optimization.html&gt;</span>
</span><span class='line'><span class="nx">define</span><span class="p">([</span> <span class="s2">&quot;jquery&quot;</span><span class="p">,</span> <span class="s2">&quot;underscore&quot;</span><span class="p">,</span> <span class="s2">&quot;backbone&quot;</span><span class="p">,</span> <span class="s2">&quot;modernizr&quot;</span><span class="p">,</span> <span class="s2">&quot;mustache&quot;</span> <span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span>        <span class="nx">_</span><span class="p">,</span>            <span class="nx">Backbone</span><span class="p">,</span>   <span class="nx">Modernizr</span><span class="p">,</span>   <span class="nx">Mustache</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// call no conflicts so if needed you can use multiple versions of $</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">noConflict</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">_</span><span class="p">.</span><span class="nx">noConflict</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">Backbone</span><span class="p">.</span><span class="nx">noConflict</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>For your application common library code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// List of utility libraries,</span>
</span><span class='line'><span class="nx">define</span><span class="p">([</span> <span class="s2">&quot;utils/ajax&quot;</span><span class="p">,</span> <span class="s2">&quot;utils/baselib&quot;</span><span class="p">,</span> <span class="s2">&quot;utils/localstorage&quot;</span><span class="p">,</span> <span class="s2">&quot;utils/debug&quot;</span><span class="p">,</span> <span class="s2">&quot;utils/shims&quot;</span> <span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">ajax</span><span class="p">,</span>         <span class="nx">baselib</span><span class="p">,</span>         <span class="nx">localstorage</span><span class="p">,</span>         <span class="nx">debug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;ajax&quot;</span> <span class="o">:</span> <span class="nx">ajax</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;baselib&quot;</span> <span class="o">:</span> <span class="nx">baselib</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;localstorage&quot;</span> <span class="o">:</span> <span class="nx">localstorage</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;debug&quot;</span> <span class="o">:</span> <span class="nx">debug</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="c1">// the shim only extend JavaScript when needed, e.g. Object.create</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>An example where you intend to use require the common models in another package file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// List of models  </span>
</span><span class='line'><span class="c1">// models in this directory are intended for site-wide usage  </span>
</span><span class='line'><span class="c1">// grouping site-wide models in this module (object)</span>
</span><span class='line'><span class="c1">// optimizes the performance and keeps dependencies organized</span>
</span><span class='line'><span class="c1">// when the (build) optimizer is run.</span>
</span><span class='line'><span class="nx">define</span><span class="p">([</span> <span class="s2">&quot;models/branding&quot;</span><span class="p">,</span> <span class="s2">&quot;models/section&quot;</span> <span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">Branding</span><span class="p">,</span>          <span class="nx">Section</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;Branding&quot;</span> <span class="o">:</span> <span class="nx">Branding</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;Section&quot;</span>  <span class="o">:</span> <span class="nx">Section</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>A quick note on code standards</h3>

<p>Notice that in the above examples the parameters may begin with lower or upper case characters. The variable names uses in the parameters that begin with <em>Uppercase</em> are <em>Constructors</em> and the <em>lowercase</em> variable names are not, they may be instances created by a constructor, or perhaps an object or function that is not meant to used with <em>new</em>.</p>

<p>The convention recommended is to use Upper CamelCase for constructors and lower camelCase for others.</p>

<h3>Common pitfall when organizing code in modules</h3>

<p>Be careful not define circular dependencies. For example, in a common <em>models</em> package (models.js) dependencies are listed for the files in your models directory</p>

<pre><code>define([ "models/branding", "models/section" ], function (branding, section)  
// ...  
return { "branding" : branding, "section", section }  
</code></pre>

<p>Then when another packages requires a common model you can access the models objects returned from your common models.js file like so&#8230;</p>

<pre><code>define([ "models", "utils" ], function (models, utils) {  
var branding = models.branding, debug = utils.debug;  
</code></pre>

<p>Perhaps after using the model a few times you get into the habit of requiring &#8220;model&#8221;. Later you need add another common model with extends a model you already defined. So the pitfall begins, you add a new model inside your models directory and add a reference this same model in the model.js:</p>

<pre><code>define([ "models/branding", "models/section", "models/section-b" ], function (branding, section)  
// ...  
return { "branding" : branding, "section", section, "section-b" : section-b }
</code></pre>

<p>However in your <em>models/section-b.js</em> file you define a dependency using the model.js which returns the models in an object like so&#8230;</p>

<pre><code>define([ "models" ], function (models, utils) {  
var section = models.section;
</code></pre>

<p>Above is the mistake in models.js a dependency was added for models/section-b and in section-b a dependency is defined for model. The new models/section-b.js requires <em>model</em> and model.js requires <em>models/section-b.js</em> - a circular dependency. This should result in a load timeout error from require.js, but not tell you about the circular dependency.</p>

<p>For other common mistakes see the <a href="http://requirejs.org/docs/errors.html" title="RequireJS common errors page">COMMON ERRORS</a> page on the RequireJS site.</p>

<h4>Executing the Build with r.js</h4>

<p>If you intalled r.js with Node&#8217;s npm (package manager) like so&#8230;</p>

<pre><code>&gt; npm install requirejs
</code></pre>

<p>&#8230;you can execute the build on the command line:</p>

<pre><code>&gt; r.js -o app.build.js
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backbone.js CollectionView to utilize a collection rather than a model]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-dot-js-collectionview-to-utilize-a-collection-rather-than-a-model/2012/01/09/"/>
    <updated>2012-01-09T02:33:00-08:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-dot-js-collectionview-to-utilize-a-collection-rather-than-a-model/2012/01/backbone-dot-js-collectionview-to-utilize-a-collection-rather-than-a-model</id>
    <content type="html"><![CDATA[<p><a href="http://documentcloud.github.com/backbone/" title="Backbone is an open-source component of DocumentCloud">Backbone.js</a> does not provide a view or controller that specifically manages a collection. <a href="http://documentcloud.github.com/backbone/#View" title="Backbone.View">Backbone view</a> objects are coupled with a <a href="http://documentcloud.github.com/backbone/#Model" title="Backbone.Model">model</a> and have render methods for presented the model data using an HTML template. However there are many instanced where a <a href="http://documentcloud.github.com/backbone/#Collection" title="Backbone.Collection">Backbone collection</a> objects (has many models) needs to be presented or managed with a single view object. Thus the need for a CollectionView constructor that implements an interface to manage many child views which render each model represented in the collection. A collection view object that generates view for each model preserves the <a href="http://documentcloud.github.com/backbone/docs/backbone.html" title="Backbone source code with inline documentation">core Backbone behavior</a> (link is to documented source, search for &#8216;change&#8217;) of firing change events on a model and a view that renders the changed data in response to the change event that was triggered by specific models.</p>

<p>Liquid Media has posted tutorials on Backbone in a 3-part series <a href="http://liquidmedia.ca/blog/2011/01/backbone-js-part-1/" title="An Intro to Backbone.js: Part 1 – Models and Collections - Liquid Media">1</a>, <a href="http://liquidmedia.ca/blog/2011/01/an-intro-to-backbone-js-part-2-controllers-and-views/" title="An Intro to Backbone.js: Part 2 – Controllers and Views - Liquid Media">2</a>, <a href="http://liquidmedia.ca/blog/2011/02/backbone-js-part-3/" title="An Intro to Backbone.js: Part 3 – Binding a Collection to a View - Liquid Media">3</a>; and the third article demonstrates the use of a <a href="http://liquidmedia.ca/blog/2011/02/backbone-js-part-3/" title="An Intro to Backbone.js: Part 3 – Binding a Collection to a View - Liquid Media">Collection View constructor</a> which does what is described above.</p>

<!--more-->


<h2>CollectionView</h2>

<p>This constructor is based on the article by Liquid Media</p>

<figure class='code'><figcaption><span>Collection View  (collection.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/views/collection.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Collection View</span>
</span><span class='line'><span class="c1">// ---------------</span>
</span><span class='line'><span class="c1">// Manages rendering many views with a collection </span>
</span><span class='line'><span class="c1">// See: &lt;http://liquidmedia.ca/blog/2011/02/backbone-js-part-3/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// The CollectionView extends BaseView and is intended for rendering a collection.</span>
</span><span class='line'><span class="c1">// A item view is required for rendering withing each iteration over the models.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Requires `define`</span>
</span><span class='line'><span class="c1">// Returns {CollectionView} constructor </span>
</span><span class='line'><span class="c1">// - instances must have a collection property</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;facade&#39;</span><span class="p">,</span><span class="s1">&#39;views/base&#39;</span><span class="p">,</span><span class="s1">&#39;utils&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">facade</span><span class="p">,</span> <span class="nx">BaseView</span><span class="p">,</span> <span class="nx">utils</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">CollectionView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">$</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">$</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">_</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">_</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Backbone</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">Backbone</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">debug</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">debug</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Constructor `{CollectionView}` extends the BaseView.prototype</span>
</span><span class='line'>    <span class="c1">// object literal argument to extend is the prototype for the CollectionView Constructor</span>
</span><span class='line'>    <span class="nx">CollectionView</span> <span class="o">=</span> <span class="nx">BaseView</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `initialize`  </span>
</span><span class='line'>        <span class="c1">// Param {Object} `options` must have a child view and tagname  </span>
</span><span class='line'>        <span class="c1">// - options should have properties: `view`, `tagName` </span>
</span><span class='line'>        <span class="nx">initialize</span> <span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">collection</span><span class="p">,</span> <span class="nx">msg</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">collection</span> <span class="o">||</span> <span class="o">!</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">collection</span> <span class="k">instanceof</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Collection</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">msg</span> <span class="o">=</span> <span class="s2">&quot;CollectionView initialize: no collection provided.&quot;</span><span class="p">;</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="nx">msg</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">BaseView</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">initialize</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">_view</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">view</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">_view</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_view</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;CollectionView initialize: no view provided.&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">_tagName</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tagName</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">_tagName</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_tagName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;CollectionView initialize: no tag name provided.&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">_className</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">className</span><span class="p">;</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">_decorator</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">decorator</span><span class="p">;</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">_id</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">_views</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>            <span class="nx">_</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">bindAll</span><span class="p">(</span><span class="s1">&#39;add&#39;</span><span class="p">,</span> <span class="s1">&#39;remove&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">setupCollection</span><span class="p">();</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `setupCollection`  </span>
</span><span class='line'>        <span class="c1">// bindings for adding and removing of models within the collection</span>
</span><span class='line'>        <span class="nx">setupCollection</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">collection</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">collection</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">collection</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">collection</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;add&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">collection</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;remove&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">collection</span><span class="p">.</span><span class="nx">length</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">collection</span><span class="p">.</span><span class="nx">request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">collection</span><span class="p">.</span><span class="nx">fetch</span><span class="p">();</span>
</span><span class='line'>                <span class="nx">collection</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">collection</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">);</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">collection</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `add`  </span>
</span><span class='line'>        <span class="c1">// Param {Model} `model` object that extends Backbone.Model</span>
</span><span class='line'>        <span class="c1">// Creates a new view for models added to the collection</span>
</span><span class='line'>        <span class="nx">add</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">view</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">view</span> <span class="o">=</span> <span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">_view</span><span class="p">({</span>
</span><span class='line'>                <span class="s2">&quot;tagName&quot;</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">_tagName</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;model&quot;</span><span class="o">:</span> <span class="nx">model</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;className&quot;</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">_className</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;decorator&quot;</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">_decorator</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">_views</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">view</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_rendered</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `remove`  </span>
</span><span class='line'>        <span class="c1">// Param {Model} `model` object that extends Backbone.Model</span>
</span><span class='line'>        <span class="c1">// removes view when model is removed from collection</span>
</span><span class='line'>        <span class="nx">remove</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">viewToRemove</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">viewToRemove</span> <span class="o">=</span> <span class="nx">_</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_views</span><span class="p">).</span><span class="nx">select</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">cv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="nx">cv</span><span class="p">.</span><span class="nx">model</span> <span class="o">===</span> <span class="nx">model</span><span class="p">;</span>
</span><span class='line'>            <span class="p">})[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">_views</span> <span class="o">=</span> <span class="nx">_</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_views</span><span class="p">).</span><span class="nx">without</span><span class="p">(</span><span class="nx">viewToRemove</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_rendered</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">viewToRemove</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span> <span class="c1">// $(viewToRemove.el).off().remove();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `render`  </span>
</span><span class='line'>        <span class="c1">// Iterates over collection appending views to this.$el</span>
</span><span class='line'>        <span class="c1">// When a {Function} decorator option is available manipulte views&#39; this.$el</span>
</span><span class='line'>        <span class="nx">render</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">confirmElement</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">_rendered</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">empty</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">_</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_views</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">view</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">decorator</span> <span class="o">&amp;&amp;</span> <span class="nx">_</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">decorator</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">view</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">decorator</span><span class="p">(</span><span class="nx">view</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">},</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">resolve</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">callbacks</span><span class="p">.</span><span class="nx">fire</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">CollectionView</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Header view with factory method to generate multiple collection views</h2>

<p>This view has a custom method <code>buildCollectionView</code> with is a factory for generating multiple collection view objects based on a multi-dimensional array containing segments of events by type and schedule. See the block that contains&#8230;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">view</span><span class="p">[</span><span class="nx">schedule</span><span class="p">][</span><span class="nx">type</span><span class="p">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">views</span><span class="p">.</span><span class="nx">CollectionView</span><span class="p">({</span>
</span><span class='line'>    <span class="s1">&#39;collection&#39;</span><span class="o">:</span> <span class="nx">collections</span><span class="p">[</span><span class="nx">schedule</span><span class="p">][</span><span class="nx">type</span><span class="p">],</span>
</span><span class='line'>    <span class="s1">&#39;view&#39;</span><span class="o">:</span> <span class="nx">EventView</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;tagName&#39;</span><span class="o">:</span> <span class="s1">&#39;li&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;el&#39;</span><span class="o">:</span> <span class="nx">view</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;section.&#39;</span> <span class="o">+</span> <span class="nx">className</span> <span class="o">+</span> <span class="s1">&#39; ul&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="s1">&#39;className&#39;</span><span class="o">:</span> <span class="nx">className</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>The CollectionView constructor requires a Backbone collection instance and a Backbone Model constructor as well as properties <code>tagname</code> and <code>el</code> which are used when initializing instances of the view constructor for each model in the collection instance.</p>

<p><em>Full implementation example</em></p>

<figure class='code'><figcaption><span>Header View  (header.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/header/views/header.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * header view </span>
</span><span class='line'><span class="cm"> * @requires define</span>
</span><span class='line'><span class="cm"> * @return {HL.View} constructor object</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>        <span class="s1">&#39;jquery&#39;</span><span class="p">,</span><span class="s1">&#39;underscore&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;collections&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;views/base&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;views&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;packages/header/views/event&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;packages/header/models/branding&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;packages/header/views/branding&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;packages/header/models/nav&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;packages/header/views/nav&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;utils/debug&#39;</span><span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">collections</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">BaseView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">views</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">EventView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">brandingModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">BrandingView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">navModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">NavView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">debug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// global header view</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">HeaderView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">HeaderView</span> <span class="o">=</span> <span class="nx">BaseView</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">el</span><span class="o">:</span> <span class="s1">&#39;header&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">view</span> <span class="o">=</span> <span class="k">this</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">_el</span> <span class="o">=</span> <span class="nx">view</span><span class="p">.</span><span class="nx">el</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">options</span> <span class="o">=</span> <span class="nx">options</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>            <span class="nx">view</span><span class="p">.</span><span class="nx">schedules</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">schedules</span> <span class="o">||</span> <span class="p">[</span><span class="s1">&#39;today&#39;</span><span class="p">,</span><span class="s1">&#39;endingSoon&#39;</span><span class="p">];</span>
</span><span class='line'>            <span class="nx">view</span><span class="p">.</span><span class="nx">types</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">types</span> <span class="o">||</span> <span class="p">[</span><span class="s1">&#39;women&#39;</span><span class="p">,</span><span class="s1">&#39;home&#39;</span><span class="p">,</span><span class="s1">&#39;kids&#39;</span><span class="p">,</span><span class="s1">&#39;beauty&#39;</span><span class="p">,</span><span class="s1">&#39;men&#39;</span><span class="p">,</span><span class="s1">&#39;all&#39;</span><span class="p">,</span><span class="s1">&#39;getaways&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">view</span><span class="p">.</span><span class="nx">branding</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BrandingView</span><span class="p">({</span>
</span><span class='line'>                <span class="nx">el</span> <span class="o">:</span> <span class="nx">_el</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">model</span> <span class="o">:</span> <span class="nx">brandingModel</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>            <span class="nx">view</span><span class="p">.</span><span class="nx">nav</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">NavView</span><span class="p">({</span>
</span><span class='line'>                <span class="nx">el</span> <span class="o">:</span> <span class="nx">_el</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">model</span><span class="o">:</span> <span class="nx">navModel</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>            <span class="nx">view</span><span class="p">.</span><span class="nx">iterateSchedulesAndTypes</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">view</span><span class="p">,</span> <span class="nx">view</span><span class="p">.</span><span class="nx">setupCollectionReference</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;HeaderView init&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">branding</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">nav</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">iterateSchedulesAndTypes</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">buildCollectionView</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">iterateSchedulesAndTypes</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderCollectionView</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Header views rendered&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// list of collections, set order of appearance in menu by order in arrays.  </span>
</span><span class='line'>        <span class="c1">// the segmented `collections` object has multidimentional array </span>
</span><span class='line'>        <span class="c1">// using properties matching these strings. These properties can be set using</span>
</span><span class='line'>        <span class="c1">// the options object as argument durig initialization.</span>
</span><span class='line'>        <span class="c1">// TODO function to resort by members type prior to rendering</span>
</span><span class='line'>        <span class="nx">schedules</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">types</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">iterateSchedulesAndTypes</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">view</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">schedules</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">schedule</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">types</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">callback</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">view</span><span class="p">,</span> <span class="p">[</span><span class="nx">schedule</span><span class="p">,</span> <span class="nx">type</span><span class="p">]);</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">setupCollectionReference</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">schedule</span><span class="p">,</span> <span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">view</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">view</span><span class="p">[</span><span class="nx">schedule</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">view</span><span class="p">[</span><span class="nx">schedule</span><span class="p">]</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">view</span><span class="p">[</span><span class="nx">schedule</span><span class="p">][</span><span class="nx">type</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">view</span><span class="p">[</span><span class="nx">schedule</span><span class="p">][</span><span class="nx">type</span><span class="p">]</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">buildCollectionView</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">schedule</span><span class="p">,</span> <span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">view</span> <span class="o">=</span> <span class="k">this</span><span class="p">,</span> <span class="nx">collection</span><span class="p">,</span> <span class="nx">className</span> <span class="o">=</span> <span class="nx">view</span><span class="p">.</span><span class="nx">setClassName</span><span class="p">(</span><span class="nx">schedule</span><span class="p">,</span> <span class="nx">type</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// `collections` object should have properties with event segments</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">collections</span><span class="p">[</span><span class="nx">schedule</span><span class="p">]</span> <span class="o">||</span> <span class="o">!</span><span class="nx">collections</span><span class="p">[</span><span class="nx">schedule</span><span class="p">][</span><span class="nx">type</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;buildCollectionView cannot access collection in: collecions.&#39;</span> <span class="o">+</span> <span class="nx">schedule</span> <span class="o">+</span> <span class="s1">&#39;.&#39;</span> <span class="o">+</span> <span class="nx">type</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">view</span><span class="p">[</span><span class="nx">schedule</span><span class="p">][</span><span class="nx">type</span><span class="p">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">views</span><span class="p">.</span><span class="nx">CollectionView</span><span class="p">({</span>
</span><span class='line'>                <span class="s1">&#39;collection&#39;</span><span class="o">:</span> <span class="nx">collections</span><span class="p">[</span><span class="nx">schedule</span><span class="p">][</span><span class="nx">type</span><span class="p">],</span>
</span><span class='line'>                <span class="s1">&#39;view&#39;</span><span class="o">:</span> <span class="nx">EventView</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;tagName&#39;</span><span class="o">:</span> <span class="s1">&#39;li&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;el&#39;</span><span class="o">:</span> <span class="nx">view</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;section.&#39;</span> <span class="o">+</span> <span class="nx">className</span> <span class="o">+</span> <span class="s1">&#39; ul&#39;</span><span class="p">),</span>
</span><span class='line'>                <span class="s1">&#39;className&#39;</span><span class="o">:</span> <span class="nx">className</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;created collection: &#39;</span> <span class="o">+</span> <span class="nx">schedule</span> <span class="o">+</span> <span class="s1">&#39;-&#39;</span> <span class="o">+</span> <span class="nx">type</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">setClassName</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">schedule</span><span class="p">,</span> <span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">className</span> <span class="o">=</span> <span class="nx">type</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">className</span> <span class="o">+=</span> <span class="nx">type</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">className</span> <span class="o">+=</span> <span class="s1">&#39;-&#39;</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">className</span> <span class="o">+=</span> <span class="nx">schedule</span><span class="p">;</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">className</span><span class="p">;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">renderCollectionView</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">schedule</span><span class="p">,</span> <span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">view</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">view</span><span class="p">[</span><span class="nx">schedule</span><span class="p">][</span><span class="nx">type</span><span class="p">].</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;rendered collection: &#39;</span> <span class="o">+</span> <span class="nx">schedule</span> <span class="o">+</span> <span class="s1">&#39;-&#39;</span> <span class="o">+</span> <span class="nx">type</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">HeaderView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Examples when Collection Views are used as a product&#8217;s variants for color and size</h2>

<figure class='code'><figcaption><span>Information View  (information.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/product/views/information.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// information view</span>
</span><span class='line'><span class="c1">// ----------------</span>
</span><span class='line'><span class="c1">// manages many views on product page</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>    <span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;underscore&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;backbone&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;mustache&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;text!packages/product/templates/information.html&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;views/collection&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;packages/product/views/color&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;packages/product/views/size&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;packages/product/views/price&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;packages/product/views/quantity&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">Mustache</span><span class="p">,</span> <span class="nx">information_template</span><span class="p">,</span> <span class="nx">CollectionView</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">ColorView</span><span class="p">,</span> <span class="nx">SizeView</span><span class="p">,</span> <span class="nx">PriceView</span><span class="p">,</span> <span class="nx">QuantityView</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">tagName</span><span class="o">:</span> <span class="s1">&#39;section&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;product&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s1">&#39;click img.swatch&#39;</span><span class="o">:</span> <span class="s1">&#39;updateColor&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;click .size&#39;</span><span class="o">:</span> <span class="s1">&#39;updateSize&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;click .cart&#39;</span><span class="o">:</span> <span class="s1">&#39;addToCart&#39;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;render&#39;</span><span class="p">,</span> <span class="s1">&#39;updateColor&#39;</span><span class="p">,</span> <span class="s1">&#39;updateSize&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">colors</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">CollectionView</span><span class="p">({</span>
</span><span class='line'>                <span class="nx">collection</span><span class="o">:</span> <span class="nx">options</span><span class="p">.</span><span class="nx">colors</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">view</span><span class="o">:</span> <span class="nx">ColorView</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">tagName</span><span class="o">:</span> <span class="s1">&#39;li&#39;</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">sizesCollection</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">sizes</span><span class="p">;</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">sizes</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">CollectionView</span><span class="p">({</span>
</span><span class='line'>                <span class="nx">collection</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">sizesCollection</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">view</span><span class="o">:</span> <span class="nx">SizeView</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">tagName</span><span class="o">:</span> <span class="s1">&#39;li&#39;</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">quantityView</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">QuantityView</span><span class="p">({</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">priceView</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">PriceView</span><span class="p">({</span>
</span><span class='line'>                <span class="nx">collection</span><span class="o">:</span> <span class="nx">options</span><span class="p">.</span><span class="nx">items</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">quantityView</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">quantityView</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">Mustache</span><span class="p">.</span><span class="nx">to_html</span><span class="p">(</span><span class="nx">information_template</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()));</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">colors</span><span class="p">.</span><span class="nx">el</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;section.colors ul&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">colors</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// sizes are rendered based off the color</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">sizes</span><span class="p">.</span><span class="nx">el</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;section.sizes ul&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">priceView</span><span class="p">.</span><span class="nx">el</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;section.price&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">quantityView</span><span class="p">.</span><span class="nx">el</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;section.quantity&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">defaultColor</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;img.swatch&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="s1">&#39;:first&#39;</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">updateColor</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">color</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;title&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">currentColor</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">});</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">sizesCollection</span><span class="p">.</span><span class="nx">byColor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">priceView</span><span class="p">.</span><span class="nx">byColorAndSize</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">updateSize</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">size</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span><span class="nx">currentSize</span><span class="o">:</span> <span class="nx">size</span><span class="p">});</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">priceView</span><span class="p">.</span><span class="nx">byColorAndSize</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span> <span class="nx">size</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">addToCart</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">addCurrentItemToCart</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>The color collection and view used by the Information view which acts as a view manager</p>

<p><strong>Colors Collection</strong></p>

<figure class='code'><figcaption><span>Colors Collection  (colors.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/product/collections/colors.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>    <span class="s1">&#39;underscore&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;backbone&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;packages/product/models/color&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">Color</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Collection</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">model</span><span class="o">:</span> <span class="nx">Color</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Colors View</strong></p>

<figure class='code'><figcaption><span>Colors View  (color.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/product/views/color.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>    <span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;underscore&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;backbone&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;mustache&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;text!packages/product/templates/color.html&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">Mustache</span><span class="p">,</span> <span class="nx">colorTemplate</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">tagName</span><span class="o">:</span> <span class="s1">&#39;li&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">Mustache</span><span class="p">.</span><span class="nx">to_html</span><span class="p">(</span><span class="nx">colorTemplate</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()));</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backbone.js and Mustache.js: Small views and templates]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-dot-js-and-mustache-dot-js-small-views-and-templates/2012/01/09/"/>
    <updated>2012-01-09T01:48:00-08:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-dot-js-and-mustache-dot-js-small-views-and-templates/2012/01/backbone-dot-js-and-mustache-dot-js-small-views-and-templates</id>
    <content type="html"><![CDATA[<p>Short and concise HTML templates that represent repeatable blocks or isolated components of a page are easier to manage and easier for other developers to edit than longer templates which encompass larger portions of a page. A view object with the responsibility of rendering and managing multiple child views is used to organize the components of a page.</p>

<p>Consider navigation elements organized in lists under top level list items&#8230;</p>

<p>Each top level item likely uses the same child list to present it&#8217;s dropdowns. Rather then use one large template and one large collection of models utilizing smaller templates as components of the view remove hardcoding the hierarchy into both the model and the template but rather move the hierarchy to the view objects used to build the page. When the structure of the child lists needs to go through the change control process for added or removed presentation or a change in the hierarchy as directed by the business, the change is simple perhaps changed one portion of a template and the order of an array which dictates the hierarchy via enumerating. Also the business may dictate that the order of the menu follows various orders depending on visitor properties (e.g. member object either male or female). Then the menu&#8217;s components display order can be dictated programmatically, utilizing the small views and templates.</p>

<p>The best practice or goal emphasized above with respect to templates and views is KISS and DRY. As long as the implementation does not become overly complex and difficult to grok, keep the template code DRY, otherwise KISS principle overrides the need to have template code that does not repeat itself.</p>

<!--more-->


<h2>Code examples</h2>

<p><em>A list item that will become part of various lists:</em></p>

<figure class='code'><figcaption><span> (event.html)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/header/templates/event.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/{{event_code}}&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;{{sort_order}}&quot;</span><span class="nt">&gt;</span>{{title}}<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>A menu structure, which can be segmented using classes to target sections within the child list</em></p>

<figure class='code'><figcaption><span> (nav.html)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/header/templates/nav.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;nav&gt;</span>
</span><span class='line'>  {{#types}}
</span><span class='line'>  <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;{{.}}&quot;</span><span class="nt">&gt;&lt;strong&gt;</span>{{.}}<span class="nt">&lt;/strong&gt;</span>
</span><span class='line'>  <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;{{.}}-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;em&gt;</span>Today&#39;s Events<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ul&gt;&lt;/ul&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;{{.}}-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;em&gt;</span>Ending Soon<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ul&gt;&lt;/ul&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  {{/types}}
</span><span class='line'><span class="nt">&lt;/nav&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>HTML generated from the two templates using multiple CollectionView objects managed by a parent view object</h3>

<figure class='code'><figcaption><span> (nav-example.html)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/html/nav-example.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;nav&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Women&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;strong&gt;</span>Women<span class="nt">&lt;/strong&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Women-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Today&#39;s Events<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Women-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12366stellaandjamiewc&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;0&quot;</span><span class="nt">&gt;</span>Stella <span class="ni">&amp;amp;</span> jamie<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Women-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12590classiqueblwtwc&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;1&quot;</span><span class="nt">&gt;</span>Classique<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Women-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Ending Soon<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Women-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12125tahariblowoutwo&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;8&quot;</span><span class="nt">&gt;</span>Tahari Outerwear Blowout<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Women-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12588ecoskinblwtwc&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;10&quot;</span><span class="nt">&gt;</span>EcoSkin Blowout<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Women-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12053jewelmakblwtwj&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;11&quot;</span><span class="nt">&gt;</span>Jewelmak Blowout<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Women-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12393elfcosmeticswb&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;15&quot;</span><span class="nt">&gt;</span>e.l.f. Cosmetics<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Women-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12056tedbakerwatchesunisex&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;16&quot;</span><span class="nt">&gt;</span>Ted Baker Watches<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Women-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/11634bootsitootsiwf&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;17&quot;</span><span class="nt">&gt;</span>BootsiTootsi<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Women-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12057lillybeewf&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;18&quot;</span><span class="nt">&gt;</span>Lillybee<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Home&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;strong&gt;</span>Home<span class="nt">&lt;/strong&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Home-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Today&#39;s Events<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Home-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/11296bedfordcottageblwtda&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;2&quot;</span><span class="nt">&gt;</span>Bedford Cottage: Throws under $49<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Home-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12368ldchomebyjoeldessauleshda&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;3&quot;</span><span class="nt">&gt;</span>LDC Home by Joel Dessaules<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Home-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Ending Soon<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Home-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12054ltdedthomaspaulfurniturehda&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;12&quot;</span><span class="nt">&gt;</span>Limited Edition: Thomas Paul Furniture<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Home-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12367pinodenaifinearthda&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;14&quot;</span><span class="nt">&gt;</span>Pino Denai (1939-2010) Fine Art Collection<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Home-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12592napastylewinecellarhda&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;20&quot;</span><span class="nt">&gt;</span>Napa Style: The Wine Cellar<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Home-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12170luxuryhotelsheetsblwthda&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;21&quot;</span><span class="nt">&gt;</span>Luxury Hotel Sheets Blowout<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Home-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12169floorcoutureblwthda&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;22&quot;</span><span class="nt">&gt;</span>Floor Couture Blowout<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Kids&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;strong&gt;</span>Kids<span class="nt">&lt;/strong&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Kids-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Today&#39;s Events<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Kids-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12369miabellebabycm&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;4&quot;</span><span class="nt">&gt;</span>Mia Belle Baby<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Kids-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Ending Soon<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Kids-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12240stencilkidsblowoutcm&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;19&quot;</span><span class="nt">&gt;</span>Stencil Kids Blowout<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Getaways&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;strong&gt;</span>Getaways<span class="nt">&lt;/strong&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Getaways-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Today&#39;s Events<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Getaways-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/Smoke_Tree_Ranch_Palm_Springs_622&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;5&quot;</span><span class="nt">&gt;</span>Smoke Tree Ranch Palm Springs <span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Getaways-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/Amara_Resort_Sedona_623&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;6&quot;</span><span class="nt">&gt;</span>Sedona, Amara Resort <span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Getaways-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/The_Andrew_Pinckney_Inn_Charleston_609&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;7&quot;</span><span class="nt">&gt;</span>The Andrew Pinckney Inn Charleston<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Getaways-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Ending Soon<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Getaways-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/Millennium_Scottsdale_Resort_Villas_608&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;23&quot;</span><span class="nt">&gt;</span>Scottsdale, Millennium Resort <span class="ni">&amp;amp;</span> Villas <span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Getaways-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/Hawaii_Prince_Hotel_Waikiki_610&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;24&quot;</span><span class="nt">&gt;</span>Hawaii Prince Hotel Waikiki<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Men&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;strong&gt;</span>Men<span class="nt">&lt;/strong&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Men-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Today&#39;s Events<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Men-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Ending Soon<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Men-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12003tedbakermc&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;9&quot;</span><span class="nt">&gt;</span>Ted Baker Men<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Men-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12406mackagemo&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;13&quot;</span><span class="nt">&gt;</span>Mackage Men<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Men-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12367pinodenaifinearthda&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;14&quot;</span><span class="nt">&gt;</span>Pino Denai (1939-2010) Fine Art Collection<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Men-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12056tedbakerwatchesunisex&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;16&quot;</span><span class="nt">&gt;</span>Ted Baker Watches<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Men-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12592napastylewinecellarhda&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;20&quot;</span><span class="nt">&gt;</span>Napa Style: The Wine Cellar<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Men-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12170luxuryhotelsheetsblwthda&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;21&quot;</span><span class="nt">&gt;</span>Luxury Hotel Sheets Blowout<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Beauty&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;strong&gt;</span>Beauty<span class="nt">&lt;/strong&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Beauty-today&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Today&#39;s Events<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>        <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">&quot;Beauty-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;em&gt;</span>Ending Soon<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;Beauty-endingSoon&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/12393elfcosmeticswb&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;15&quot;</span><span class="nt">&gt;</span>e.l.f. Cosmetics<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/nav&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Base classes with custom library functions added to Backbone.js constructors]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/base-classes-with-custom-library-functions-added-to-backbone-dot-js-constructors/2012/01/09/"/>
    <updated>2012-01-09T00:51:00-08:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/base-classes-with-custom-library-functions-added-to-backbone-dot-js-constructors/2012/01/base-classes-with-custom-library-functions-added-to-backbone-dot-js-constructors</id>
    <content type="html"><![CDATA[<h2>Authoring Code with Backbone.js with extendability in mind</h2>

<p>The main objective in choosing the <a href="http://documentcloud.github.com/backbone/" title="Backbone is an open-source component of DocumentCloud">Backbone.js</a> library for our frontend framework is to author code in an organized and repeatable manner, building an application &#8220;the Backbone way&#8221;. The benefits are that the community has contributed documenation, blogs, code examples, tutorials, videos and books so that building a JavaScript application with our framework should be straight forward (not too much magic under cover).</p>

<p>However when building both the mobile and desktop applications or in the future we need added behavior recuired to provide a solution for the business requirements/needs of the Web application. Hence the need for an (abstract class) object as the <strong>base constructor</strong> for our framework. Each <strong>base</strong> object extends the appropriate Backbone constructor method: <a href="http://documentcloud.github.com/backbone/#Model" title="Backbone.Model">Backbone.Model</a>, <a href="http://documentcloud.github.com/backbone/#View" title="Backbone.View">Backbone.View</a>, <a href="http://documentcloud.github.com/backbone/#Collection" title="Backbone.Collection">Backbone.Collection</a> and <a href="http://documentcloud.github.com/backbone/#Router" title="Backbone.Router">Backbone.Router</a>.</p>

<!--more-->


<p>For example <a href="http://docs.jquery.com/Main_Page" title="jQuery documentation">jQuery</a> provides a &#8220;Deferred&#8221; constructor function &#8221;<a href="http://api.jquery.com/category/deferred-object/" title="Deferred Object: jQuery.Deferred()">jQuery.Deferred()</a>&#8221; based on the CommonJS Promises/A.</p>

<blockquote><p>&#8220;introduces several enhancements to the way callbacks are managed and invoked. In particular, jQuery.Deferred() provides flexible ways to provide multiple callbacks, and these callbacks can be invoked regardless of whether the original callback dispatch has already occurred.&#8221; - <a href="http://api.jquery.com/category/deferred-object/" title="Deferred Object: jQuery.Deferred()">jQuery API: Deferred Object</a></p></blockquote>

<h2>Base constructors which extend Backbone.js constructors</h2>

<h3>Base Model</h3>

<p>This object extends the Backbone.Model constructor adding methods for calling <code>__super__</code> and insuring that only a instance of a Backbone.Model&#8217;s initialization methods is called when calling <code>this.__super__.initialize.call(this);</code> within an instance. Backbone constructors and be further extend and utilize JavaScript prototypal inheritance so this <code>__super__</code> method is sugar for <code>this.constructor.prototype.initialize.call(this, attributes, options)</code> but insuring that null or undefined is not called but rather the initialize method of an ancestor of the Backbone instance object not a native JavaScript object&#8217;s constructor which does not have an initialize function. Also the base object has a property named &#8220;deferred&#8221; which will be an instance of the jQuery.Deferred object when the constructor is initialized. A deferred object is vary useful to modules that require a instance of the Backbone model that fetches data from our RESTful api. Or when extending/decorating a constructor with additional methods and adding more &#8220;done&#8221; callbacks</p>

<figure class='code'><figcaption><span> (base.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/models/base.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Base Model  </span>
</span><span class='line'><span class="c1">// -------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Requires `define`  </span>
</span><span class='line'><span class="c1">// Return {BaseModel} object as constructor</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;facade&#39;</span><span class="p">,</span> <span class="s1">&#39;utils&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">facade</span><span class="p">,</span> <span class="nx">utils</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">BaseModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Backbone</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">Backbone</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">$</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">$</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">_</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">_</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">lib</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">baselib</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">ajaxOptions</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">ajaxOptions</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">debug</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">debug</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Constructor `{BaseModel}` extends Backbone.Model.prototype</span>
</span><span class='line'>    <span class="c1">// object literal argument to extend is the prototype for the BaseModel constructor</span>
</span><span class='line'>    <span class="nx">BaseModel</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Model</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Param {Object} `attributes` set on model when creating an instance  </span>
</span><span class='line'>        <span class="c1">// Param {Object} `options`  </span>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">attributes</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// debug.log(&quot;BaseModel init called&quot;);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">options</span> <span class="o">=</span> <span class="nx">options</span><span class="p">;</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">deferred</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">$</span><span class="p">.</span><span class="nx">Deferred</span><span class="p">();</span>
</span><span class='line'>            <span class="c1">// Backbone.Model.prototype.initialize.call(this, arguments);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Property:** `request` - assign fetch return value to this.request property, </span>
</span><span class='line'>        <span class="c1">// fetch returns (jQuery) ajax promise object</span>
</span><span class='line'>        <span class="nx">request</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `fetch`</span>
</span><span class='line'>        <span class="c1">// Wrap Backbone.Model.prototype.fetch with support for deferreds</span>
</span><span class='line'>        <span class="nx">fetch</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">options</span> <span class="o">=</span> <span class="nx">options</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">options</span><span class="p">.</span><span class="nx">success</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">options</span><span class="p">.</span><span class="nx">success</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">fetchSuccess</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">options</span><span class="p">.</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">options</span><span class="p">.</span><span class="nx">error</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">fetchError</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">_</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">options</span><span class="p">,</span> <span class="nx">ajaxOptions</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">request</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Model</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">fetch</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Default success and error handlers used with this.fetch() ...</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `fetchSuccess` - resolve the deferred here in success</span>
</span><span class='line'>        <span class="nx">fetchSuccess</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">model</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">model</span><span class="p">.</span><span class="nx">deferred</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">model</span><span class="p">.</span><span class="nx">request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">model</span><span class="p">.</span><span class="nx">request</span> <span class="o">=</span> <span class="nx">model</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">promise</span><span class="p">();</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="nx">model</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `fetchError` - log response on error</span>
</span><span class='line'>        <span class="nx">fetchError</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">model</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">model</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">reject</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Primarily a tool for unit tests... Don&#39;t rely on calling this.isReady!!</span>
</span><span class='line'>        <span class="nx">isReady</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">isResolved</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">isResolved</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `setOptions` - set urlRoot</span>
</span><span class='line'>        <span class="nx">setOptions</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">urlRoot</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">urlRoot</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">urlRoot</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">truncateString</span><span class="o">:</span> <span class="nx">lib</span><span class="p">.</span><span class="nx">truncateString</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">BaseModel</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Other BASE objects borrowing the same implementation</h3>

<figure class='code'><figcaption><span> (base.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/views/base.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Base View</span>
</span><span class='line'><span class="c1">// ---------</span>
</span><span class='line'><span class="c1">// A view object to construct a standard view with common properties and utilties</span>
</span><span class='line'><span class="c1">// The base view extends Backbone.View adding methods for resolving deferreds, </span>
</span><span class='line'><span class="c1">// rendering, decorating data just in time for rendering, adding child views to </span>
</span><span class='line'><span class="c1">// form a composite of views under one view object, add a destroy method.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Example use for a composite view utilizing addChildView, setOptions &amp; callbacks:</span>
</span><span class='line'><span class="c1">// </span>
</span><span class='line'><span class="c1">//     MyCompositeViewConstructor = BaseView.extend({</span>
</span><span class='line'><span class="c1">//     </span>
</span><span class='line'><span class="c1">//         template: myHTMLTemplate,</span>
</span><span class='line'><span class="c1">//     </span>
</span><span class='line'><span class="c1">//         initialize: function (options) {</span>
</span><span class='line'><span class="c1">//             _.bindAll(this);</span>
</span><span class='line'><span class="c1">//             this.setOptions();</span>
</span><span class='line'><span class="c1">//             BaseView.prototype.initialize.call(this, options);</span>
</span><span class='line'><span class="c1">//         },</span>
</span><span class='line'><span class="c1">//     </span>
</span><span class='line'><span class="c1">//         dataDecorator: function (data) {</span>
</span><span class='line'><span class="c1">//             data.myExtraProperty = &#39;stuff I added just in time to render&#39;;</span>
</span><span class='line'><span class="c1">//             return data;</span>
</span><span class='line'><span class="c1">//         },</span>
</span><span class='line'><span class="c1">//     </span>
</span><span class='line'><span class="c1">//         setOptions: function () {</span>
</span><span class='line'><span class="c1">//             var msg;</span>
</span><span class='line'><span class="c1">//             if (!this.options || !this.options.childView) {</span>
</span><span class='line'><span class="c1">//                 msg = &quot;MyCompositeViewConstructor requires a options.childView object&quot;;</span>
</span><span class='line'><span class="c1">//                 throw new Error(msg);</span>
</span><span class='line'><span class="c1">//             }</span>
</span><span class='line'><span class="c1">//             this.addChildView();</span>
</span><span class='line'><span class="c1">//         },</span>
</span><span class='line'><span class="c1">//     </span>
</span><span class='line'><span class="c1">//         addChildView: function () {</span>
</span><span class='line'><span class="c1">//             var childView = this.options.childView, renderChildView;</span>
</span><span class='line'><span class="c1">//     </span>
</span><span class='line'><span class="c1">//             renderChildView = BaseView.prototype.addChildView(childView);</span>
</span><span class='line'><span class="c1">//             this.callbacks.add(renderChildView);</span>
</span><span class='line'><span class="c1">//         }</span>
</span><span class='line'><span class="c1">//     });</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Requires `define`</span>
</span><span class='line'><span class="c1">// Return `{BaseView}` constructor</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;facade&#39;</span><span class="p">,</span> <span class="s1">&#39;facade&#39;</span><span class="p">,</span> <span class="s1">&#39;utils&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">facade</span><span class="p">,</span> <span class="nx">facade</span><span class="p">,</span> <span class="nx">utils</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">BaseView</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Backbone</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">Backbone</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">$</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">$</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">_</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">_</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">_toHTML</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">toHTML</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Deferred</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">Deferred</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Callbacks</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">Callbacks</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">lib</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">baselib</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">debug</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">debug</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Constructor `{BaseView}` extends Backbone.Model.prototype</span>
</span><span class='line'>    <span class="c1">// object literal argument to extend is the prototype for the BaseView constructor</span>
</span><span class='line'>    <span class="nx">BaseView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `initialize`  </span>
</span><span class='line'>        <span class="c1">// Param {Object} `options`  </span>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">deferred</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Deferred</span><span class="p">();</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">callbacks</span> <span class="o">=</span> <span class="nx">Callbacks</span><span class="p">(</span><span class="s1">&#39;unique&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `setOptions`  </span>
</span><span class='line'>        <span class="c1">// Param {Object} `options`  </span>
</span><span class='line'>        <span class="c1">// handle options passed to initialize, e.g. required properties/errors</span>
</span><span class='line'>        <span class="nx">setOptions</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">destination</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">destination</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">destination</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">template</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">template</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">template</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `render`  </span>
</span><span class='line'>        <span class="c1">// Standarization of the task to render a view using a model &amp; template</span>
</span><span class='line'>        <span class="c1">// Options available:  </span>
</span><span class='line'>        <span class="c1">// - Method to add the resulting markiup to the dom  </span>
</span><span class='line'>        <span class="c1">// - Callback to mutate the model&#39;s data after model.toJSON() called  </span>
</span><span class='line'>        <span class="c1">//   - Merging data to template happens after dataDecorator is applied  </span>
</span><span class='line'>        <span class="c1">// - Callbacks object can be filled with ancillerary work following render</span>
</span><span class='line'>        <span class="c1">//   - E.g. callbacks list can trigger rendering of child views  </span>
</span><span class='line'>        <span class="c1">// Param {String} `domInsertion` - gives option for adding result to dom  </span>
</span><span class='line'>        <span class="c1">// Param {Function} `dataDecorator` - accepts arg for {Object} `data`  </span>
</span><span class='line'>        <span class="c1">// Returns the same (mutated) {Object} `data`</span>
</span><span class='line'>        <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">domInsertion</span><span class="p">,</span> <span class="nx">dataDecorator</span><span class="p">,</span> <span class="nx">partials</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">markup</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">confirmElement</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">dataDecorator</span> <span class="o">=</span> <span class="nx">dataDecorator</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">dataDecorator</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">markup</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">toHTML</span><span class="p">(</span><span class="nx">dataDecorator</span><span class="p">,</span> <span class="nx">partials</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">domInsertion</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">domInsertionMethod</span><span class="p">(</span><span class="nx">domInsertion</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">[</span><span class="nx">domInsertion</span><span class="p">](</span><span class="nx">markup</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">resolve</span><span class="p">();</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">callbacks</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `resolve`  </span>
</span><span class='line'>        <span class="c1">// Resolve the view&#39;s deferred object after all callbacks are fired once.</span>
</span><span class='line'>        <span class="nx">resolve</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">view</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">isResolved</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">callbacks</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">callbacks</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">this</span><span class="p">.</span><span class="nx">callbacks</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `confirmElement`  </span>
</span><span class='line'>        <span class="c1">// A view needs an `el` property and `$el` too; a helper to check that this.el is OK.</span>
</span><span class='line'>        <span class="nx">confirmElement</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">$el</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;View has no this.el or this.options.el property defined.&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `toHTML`  </span>
</span><span class='line'>        <span class="c1">// A wrapper for the task of merging a Mustache.js template with preprocessing</span>
</span><span class='line'>        <span class="c1">// Handles the merging of JSON data from model with a HTML template {{vars}}</span>
</span><span class='line'>        <span class="c1">// Prior to merging the template the data can be changed with dataDecorator  </span>
</span><span class='line'>        <span class="c1">// Requires _toHTML an alias for the applications templating method  </span>
</span><span class='line'>        <span class="c1">// Param {Function} `dataDecorator` - accepts and returns a {Object} `data`  </span>
</span><span class='line'>        <span class="c1">// Param {Object} `partials` - see Mustache.js documentation.</span>
</span><span class='line'>        <span class="nx">toHTML</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">dataDecorator</span><span class="p">,</span> <span class="nx">partials</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">markup</span><span class="p">,</span> <span class="nx">data</span><span class="p">,</span> <span class="nx">args</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">data</span> <span class="o">=</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">)</span> <span class="o">?</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()</span> <span class="o">:</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">dataDecorator</span> <span class="o">&amp;&amp;</span> <span class="nx">_</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">dataDecorator</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">data</span> <span class="o">=</span> <span class="nx">dataDecorator</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">template</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">template</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">template</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span> <span class="o">||</span> <span class="o">!</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;BaseView method toHTML called, but this.template or data is not defined.&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">markup</span> <span class="o">=</span> <span class="nx">_toHTML</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">,</span> <span class="nx">data</span><span class="p">,</span> <span class="nx">partials</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">markup</span><span class="p">;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `domInsertionMethod` - used when rendering to add markup to dom  </span>
</span><span class='line'>        <span class="c1">// Default is `html` however this is configurable to support :  </span>
</span><span class='line'>        <span class="c1">//  - &#39;append&#39;, &#39;html&#39;, &#39;prepend&#39;, &#39;text&#39;</span>
</span><span class='line'>        <span class="nx">domInsertionMethod</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">domInsertionMethod</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">defaultMethod</span> <span class="o">=</span> <span class="s1">&#39;html&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">domInsertionMethods</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;append&#39;</span><span class="p">,</span> <span class="s1">&#39;html&#39;</span><span class="p">,</span> <span class="s1">&#39;prepend&#39;</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="nx">domInsertion</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">domInsertionMethod</span> <span class="o">!==</span> <span class="nx">defaultMethod</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nx">domInsertionMethod</span> <span class="o">&amp;&amp;</span> <span class="nx">_</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">domInsertionMethod</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">domInsertionMethods</span><span class="p">,</span> <span class="nx">domInsertionMethod</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nx">domInsertion</span> <span class="o">=</span> <span class="nx">domInsertionMethod</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="nx">domInsertion</span> <span class="o">||</span> <span class="nx">defaultMethod</span><span class="p">;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `dataDecorator`  </span>
</span><span class='line'>        <span class="c1">// No-op re-define as needed as hook to modify model data just before rendering</span>
</span><span class='line'>        <span class="nx">dataDecorator</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">data</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Property:** {Object} `callbacks` - list of callbacks</span>
</span><span class='line'>        <span class="c1">// Child views or render stages can be managed using jQuery Callbacks</span>
</span><span class='line'>        <span class="c1">// this should be an Callbacks object for each instance, so the </span>
</span><span class='line'>        <span class="c1">// initialize method sets the Callbacks object</span>
</span><span class='line'>        <span class="nx">callbacks</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Property:** {Object} `deferred` - implements a jQuery.Deferred interface</span>
</span><span class='line'>        <span class="c1">// Initialization or other criteria to resolve whether view is ready </span>
</span><span class='line'>        <span class="c1">// can be handled with jQuery Deferred, this should be an deferred </span>
</span><span class='line'>        <span class="c1">// object for each instance, the initialize method sets the </span>
</span><span class='line'>        <span class="c1">// deferred instance.</span>
</span><span class='line'>        <span class="nx">deferred</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Primarily a tool for unit tests... Don&#39;t rely on calling this.isReady!!</span>
</span><span class='line'>        <span class="nx">isReady</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">isResolved</span><span class="p">();</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `addChildView`  </span>
</span><span class='line'>        <span class="c1">// For a composite view this method can add multiple view objects</span>
</span><span class='line'>        <span class="c1">// Setup child views which can be rendered or appended to another context</span>
</span><span class='line'>        <span class="nx">addChildView</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">view</span><span class="p">,</span> <span class="nx">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">callbackFn</span><span class="p">,</span> <span class="nx">msg</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">view</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">msg</span> <span class="o">=</span> <span class="s2">&quot;baseView addChildView expects view object as first arg.&quot;</span><span class="p">;</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="nx">msg</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">context</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">_</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">(</span><span class="nx">context</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">callbackFn</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">view</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>                    <span class="nx">view</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">$el</span><span class="p">);</span>
</span><span class='line'>                <span class="p">};</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">callbackFn</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">view</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>                <span class="p">};</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">callbackFn</span><span class="p">;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `getOuterHtml` - utility fn  </span>
</span><span class='line'>        <span class="c1">// Using outerHTML with any browser via jQuery fallback when not supported</span>
</span><span class='line'>        <span class="nx">getOuterHtml</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">outerHTML</span><span class="p">)</span> <span class="o">?</span> <span class="nx">obj</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">outerHTML</span> <span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;div/&gt;&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">clone</span><span class="p">()</span> <span class="p">).</span><span class="nx">html</span><span class="p">();</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `destroy` - used to teardown a view object  </span>
</span><span class='line'>        <span class="c1">// Best practice to avoid memory leaks is to remove references between objects</span>
</span><span class='line'>        <span class="nx">destroy</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">key</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">removeSubscribers</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">removeSubscribers</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">destination</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">destination</span><span class="p">).</span><span class="nx">empty</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="nx">key</span> <span class="k">in</span> <span class="k">this</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">delete</span> <span class="k">this</span><span class="p">[</span><span class="nx">key</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `addSubscribers`  </span>
</span><span class='line'>        <span class="c1">// No-op re-define as needed, for Channel pub/sub or other event bindings</span>
</span><span class='line'>        <span class="nx">addSubscribers</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `removeSubscribers`  </span>
</span><span class='line'>        <span class="c1">// Re-define as needed used by this.destroy() to remove pub/sub bindings</span>
</span><span class='line'>        <span class="nx">removeSubscribers</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">off</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">BaseView</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span> (base.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/collections/base.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Base Collection</span>
</span><span class='line'><span class="c1">// ---------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Requires `define`  </span>
</span><span class='line'><span class="c1">// Return {BaseCollection} object as constructor</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;facade&#39;</span><span class="p">,</span> <span class="s1">&#39;utils&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">facade</span><span class="p">,</span> <span class="nx">utils</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">BaseCollection</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Backbone</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">Backbone</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">$</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">$</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">_</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">_</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">lib</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">baselib</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">ajaxOptions</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">ajaxOptions</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">debug</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">debug</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Constructor `{BaseCollection}` extends Backbone.Collection.prototype</span>
</span><span class='line'>    <span class="c1">// object literal argument to extend is the prototype for the BaseCollection constructor</span>
</span><span class='line'>    <span class="nx">BaseCollection</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Collection</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `initialize`  </span>
</span><span class='line'>        <span class="c1">// Param {Object} `models` - added during call to new BaseCollection([/*models*/])  </span>
</span><span class='line'>        <span class="c1">// Param {Object} `options` - add a comparator</span>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">models</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;BaseCollection initialize...&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">cid</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">cid</span> <span class="o">||</span> <span class="nx">_</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">(</span><span class="s1">&#39;c&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">deferred</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">$</span><span class="p">.</span><span class="nx">Deferred</span><span class="p">();</span>
</span><span class='line'>            <span class="c1">// When overriding use: `Backbone.Collection.prototype.initialize.call(this, arguments);`</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Property:** `request` - assign fetch return value to this.request property, </span>
</span><span class='line'>        <span class="c1">// fetch returns (jQuery) ajax promise object</span>
</span><span class='line'>        <span class="nx">request</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `fetch`  </span>
</span><span class='line'>        <span class="c1">// Wrap Backbone.Collection.prototype.fetch with support for deferreds</span>
</span><span class='line'>        <span class="nx">fetch</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">options</span> <span class="o">=</span> <span class="nx">options</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">options</span><span class="p">.</span><span class="nx">success</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">options</span><span class="p">.</span><span class="nx">success</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">fetchSuccess</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">options</span><span class="p">.</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">options</span><span class="p">.</span><span class="nx">error</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">fetchError</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">_</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">options</span><span class="p">,</span> <span class="nx">ajaxOptions</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">request</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Collection</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">fetch</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">this</span><span class="p">.</span><span class="nx">request</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">promise</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Primarily a tool for unit tests... Don&#39;t rely on calling this.isReady!!</span>
</span><span class='line'>        <span class="nx">isReady</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">isResolved</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">isResolved</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Default success and error handlers used with this.fetch() ...</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `fetchSuccess` - resolve the deferred here in success</span>
</span><span class='line'>        <span class="nx">fetchSuccess</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">collection</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// **Method:** `fetchError` - log response on error</span>
</span><span class='line'>        <span class="nx">fetchError</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">collection</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">BaseCollection</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Using a base constructor</h2>

<figure class='code'><figcaption><span> (events.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/collections/events.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Events Collection  </span>
</span><span class='line'><span class="c1">// -----------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// @requires `define`  </span>
</span><span class='line'><span class="c1">// @return {BaseCollection} EventsCollection instance</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">,</span><span class="s1">&#39;underscore&#39;</span><span class="p">,</span><span class="s1">&#39;models&#39;</span><span class="p">,</span><span class="s1">&#39;collections/base&#39;</span><span class="p">,</span><span class="s1">&#39;utils/debug&#39;</span><span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span>      <span class="nx">_</span><span class="p">,</span>           <span class="nx">models</span><span class="p">,</span>  <span class="nx">BaseCollection</span><span class="p">,</span>    <span class="nx">debug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">EventsCollection</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">eventsModel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">models</span><span class="p">.</span><span class="nx">EventsData</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">Event</span> <span class="o">=</span> <span class="nx">models</span><span class="p">.</span><span class="nx">Event</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">EventsCollection</span> <span class="o">=</span> <span class="nx">BaseCollection</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">model</span><span class="o">:</span> <span class="nx">Event</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">models</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">collection</span> <span class="o">=</span> <span class="k">this</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">data</span> <span class="o">=</span> <span class="nx">eventsModel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">collection</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">EventsCollection</span><span class="p">.</span><span class="nx">__super__</span><span class="p">.</span><span class="nx">initialize</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">arguments</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;EventsCollection initialized using eventsData.get(&#39;events&#39;).&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>            <span class="nx">data</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">collection</span><span class="p">.</span><span class="nx">models</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;events&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">collection</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">();</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">comparator</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">event</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">isReady</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="nx">eventsModel</span><span class="p">.</span><span class="nx">isReady</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">isResolved</span><span class="p">());</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nx">EventsCollection</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Extending a Collection instance by inheriting it&#8217;s constructor</h2>

<figure class='code'><figcaption><span> (events-segments.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/collections/events-segments.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Events Segments Collection  </span>
</span><span class='line'><span class="c1">// -----------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// @requires `define`  </span>
</span><span class='line'><span class="c1">// @return {Array} `segments` multi-dimensional array[schedule][type] </span>
</span><span class='line'><span class="c1">// with collection {EventsSegmentCollection} instances</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">,</span><span class="s1">&#39;underscore&#39;</span><span class="p">,</span><span class="s1">&#39;collections/events&#39;</span><span class="p">,</span><span class="s1">&#39;utils/baselib&#39;</span><span class="p">,</span><span class="s1">&#39;utils/debug&#39;</span><span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span>      <span class="nx">_</span><span class="p">,</span>           <span class="nx">eventsCollection</span><span class="p">,</span>    <span class="nx">baselib</span><span class="p">,</span>        <span class="nx">debug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">EventsSegmentCollection</span><span class="p">,</span> <span class="nx">types</span><span class="p">,</span> <span class="nx">schedules</span><span class="p">,</span> <span class="nx">segments</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Subclass for creating specific segments of a collection</span>
</span><span class='line'>    <span class="nx">EventsSegmentCollection</span> <span class="o">=</span> <span class="nx">eventsCollection</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">model</span><span class="o">:</span> <span class="nx">eventsCollection</span><span class="p">.</span><span class="nx">model</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// @param `options` should have type and schedule properties to filter the collection by  </span>
</span><span class='line'>        <span class="c1">// @param `models` is not really needed, (this is the args format Backbone uses)</span>
</span><span class='line'>        <span class="c1">// when null/undefined is passed the model will filter the events collection using options param</span>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">models</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">options</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">options</span><span class="p">.</span><span class="nx">type</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">options</span><span class="p">.</span><span class="nx">schedule</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;EventsSegmentCollection expected options parameter with type and schedule properties.&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="c1">// type and schedule properties are used to filter the collection</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">schedule</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">schedule</span><span class="p">;</span>
</span><span class='line'>            <span class="c1">// use events collection models with falsy models argument, e.g. null</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">models</span> <span class="o">=</span> <span class="nx">models</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">selectFilters</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span>
</span><span class='line'>            <span class="c1">// set this inherited property as resolved</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">();</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Methods to filter collection and match schedule and/or type</span>
</span><span class='line'>        <span class="c1">// filter method is Backbone pointer to Underscore collection `filter` method</span>
</span><span class='line'>        <span class="c1">// @see &lt;http://documentcloud.github.com/backbone/#Collection-Underscore-Methods&gt;</span>
</span><span class='line'>        <span class="c1">// collection&#39;s properties `type` and `schedule` are setup during initialization </span>
</span><span class='line'>        <span class="nx">selectFilters</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">collection</span> <span class="o">=</span> <span class="k">this</span><span class="p">,</span> <span class="nx">models</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">type</span> <span class="o">===</span> <span class="s1">&#39;All&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">models</span> <span class="o">=</span> <span class="nx">eventsCollection</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="p">(</span><span class="nx">model</span><span class="p">.</span><span class="nx">schedule</span> <span class="o">&amp;&amp;</span> <span class="nx">model</span><span class="p">.</span><span class="nx">schedule</span> <span class="o">===</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">schedule</span><span class="p">);</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">models</span> <span class="o">=</span> <span class="nx">eventsCollection</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="kd">var</span> <span class="nx">found</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="nx">model</span><span class="p">.</span><span class="nx">schedule</span> <span class="o">&amp;&amp;</span> <span class="nx">model</span><span class="p">.</span><span class="nx">schedule</span> <span class="o">===</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">schedule</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="nx">model</span><span class="p">.</span><span class="nx">types</span> <span class="o">&amp;&amp;</span> <span class="nx">$</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">collection</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span> <span class="nx">model</span><span class="p">.</span><span class="nx">types</span><span class="p">)</span> <span class="o">!==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                            <span class="nx">found</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="k">return</span> <span class="nx">found</span><span class="p">;</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">models</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create segmented collections from the events collection</span>
</span><span class='line'>    <span class="c1">// e.g. &#39;events.today.Women&#39;, &#39;events.ending_soon.Home&#39;</span>
</span><span class='line'>    <span class="c1">// events objects are expected to have type and schedule properties</span>
</span><span class='line'>    <span class="c1">// the strings in the schedules and type array match values on the event properties</span>
</span><span class='line'>    <span class="nx">schedules</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;today&#39;</span><span class="p">,</span> <span class="s1">&#39;ending_soon&#39;</span> <span class="cm">/*, &#39;upcoming&#39; */</span> <span class="p">];</span>
</span><span class='line'>    <span class="nx">types</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Beauty&#39;</span><span class="p">,</span> <span class="s1">&#39;Getaways&#39;</span><span class="p">,</span> <span class="s1">&#39;Home&#39;</span><span class="p">,</span> <span class="s1">&#39;Kids&#39;</span><span class="p">,</span> <span class="s1">&#39;Men&#39;</span><span class="p">,</span> <span class="s1">&#39;Women&#39;</span><span class="p">,</span> <span class="s1">&#39;All&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// segments are combinations of schedules and types, e.g. `today` and `Beauty`</span>
</span><span class='line'>    <span class="nx">segments</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// iterate over schedules and types to build new collections by segments</span>
</span><span class='line'>    <span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">schedules</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">schedule</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">segments</span><span class="p">[</span><span class="nx">schedule</span><span class="p">]</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>        <span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">types</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">segments</span><span class="p">[</span><span class="nx">schedule</span><span class="p">][</span><span class="nx">type</span><span class="p">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">EventsSegmentCollection</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>                <span class="s2">&quot;type&quot;</span> <span class="o">:</span> <span class="nx">type</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;schedule&quot;</span> <span class="o">:</span> <span class="nx">schedule</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">segments</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backbone Views using Mustache Templates]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-views-using-mustache-templates/2012/01/08/"/>
    <updated>2012-01-08T23:35:00-08:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-views-using-mustache-templates/2012/01/backbone-views-using-mustache-templates</id>
    <content type="html"><![CDATA[<h2>Using Mustache.js</h2>

<p>Mustache is a template library based on logic-less templates and the JavaScript implementation can be executed on the client side. The basic usage takes two components:</p>

<ol>
<li>An HTML template with variables embedded inside double curly braces, e.g. <em>&lt;p&gt;&#123;&#123;myVar&#125;&#125;&lt;/p&gt;</em></li>
<li>A JSON object with data containing the named object referenced in the template e.g. <em>{ &#8220;myVar&#8221; : &#8220;Sting value here&#8221; }</em>.</li>
</ol>


<p>The <a href="https://github.com/janl/mustache.js" title="Mustache.js source code and documentation on github">Mustache.js</a> api provides a method <code>Mustache.to_html()</code> which compiles the template code with the JSON object to produce a string to insert into the DOM. For example: <code>rendered = Mustache.to_html(view.template, view.model.toJSON());</code></p>

<h2>Simple template used to render a list item</h2>

<p>This example will be used by a Backbone View object&#8217;s render method which will be used within a CollectionView object with the responsibility of building views from a Backbone collection object</p>

<figure class='code'><figcaption><span> (event.html)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/header/templates/event.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/event/{{event_code}}&quot;</span> <span class="na">data-sort=</span><span class="s">&quot;{{sort_order}}&quot;</span><span class="nt">&gt;</span>{{title}}<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>JSON Data: Event object</h2>

<p>The data below includes the variables (<em>event_code</em>, <em>sort_order</em>, <em>title</em>) referenced in the the template and other data not utilized in the template.</p>

<figure class='code'><figcaption><span> (event-object.json)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/json/event-object.json'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;event_id&quot;</span><span class="o">:</span> <span class="s2">&quot;12366&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;event_code&quot;</span><span class="o">:</span> <span class="s2">&quot;12366stellaandjamiewc&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;start_date&quot;</span><span class="o">:</span> <span class="s2">&quot;2011-12-28T08:00:00-08:00&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;end_date&quot;</span><span class="o">:</span> <span class="s2">&quot;2011-12-30T08:00:00-08:00&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;image_url&quot;</span><span class="o">:</span> <span class="s2">&quot;/assets/12366stellaandjamiewc/event-small.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;info&quot;</span><span class="o">:</span> <span class="s2">&quot;/assets/12366stellaandjamiewc/info.txt&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;video&quot;</span><span class="o">:</span> <span class="s2">&quot;/assets/12366stellaandjamiewc/video.mp4&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;title&quot;</span><span class="o">:</span> <span class="s2">&quot;Stella &amp; jamie&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;tagline&quot;</span><span class="o">:</span> <span class="s2">&quot;Sequins and detailing that dress things up&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;event_types&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;Women&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="s2">&quot;meta&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;msa&quot;</span><span class="o">:</span> <span class="p">[],</span>
</span><span class='line'>        <span class="s2">&quot;status&quot;</span><span class="o">:</span> <span class="s2">&quot;Active&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;private_event&quot;</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;exclusive&quot;</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;preview&quot;</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;nested&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;parents&quot;</span><span class="o">:</span> <span class="p">[],</span>
</span><span class='line'>            <span class="s2">&quot;children&quot;</span><span class="o">:</span> <span class="p">[],</span>
</span><span class='line'>            <span class="s2">&quot;siblings&quot;</span><span class="o">:</span> <span class="p">[]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s2">&quot;description&quot;</span><span class="o">:</span> <span class="s2">&quot;Sequins and detailing that dress things up.&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;coa&quot;</span><span class="o">:</span> <span class="s2">&quot;womens_apparel&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;sort_order&quot;</span><span class="o">:</span> <span class="s2">&quot;2&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;category&quot;</span><span class="o">:</span> <span class="s2">&quot;Accessories&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;event_display_format&quot;</span><span class="o">:</span> <span class="s2">&quot;Regular&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Backbone View in a AMD module utilizing Mustache within it&#8217;s render() method</h2>

<p>The module requires a text/html file by including a string in the dependencies array : <code>'text!packages/header/templates/event.html'</code> and assigns the text string to the variable listed in the anonymous function&#8217;s arguments named: <code>eventTemplate</code>. The JSON data is injected when this view constructor is initialized by calling the construction function with the &#8220;new&#8221; operator and passing in the JSON object as the model data, e.g. <code>"model" : new EventView(model),</code></p>

<p>The code <code>rendered = Mustache.to_html(view.template, view.model.toJSON());</code> has a (string) template as the first argument and the second argument is the JSON data object. The result of this <code>to_html</code> method is assigned to the variable <code>rendered</code>. Then the view instance&#8217;s &#8220;render()&#8221; method inserts the rendered html into the DOM reference by the Backbone View object&#8217;s &#8220;el&#8221; property&#8230; <code>$(view.el).html(rendered);</code></p>

<figure class='code'><figcaption><span> (event.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/header/views/event.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// event view </span>
</span><span class='line'><span class="c1">// ----------</span>
</span><span class='line'><span class="c1">// @requires define</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;underscore&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;backbone&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;views/base&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;text!packages/header/templates/event.html&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;mustache&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;utils/debug&#39;</span><span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">BaseView</span><span class="p">,</span> <span class="nx">eventTemplate</span><span class="p">,</span> <span class="nx">Mustache</span><span class="p">,</span> <span class="nx">debug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">EventView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">EventView</span> <span class="o">=</span> <span class="nx">BaseView</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">template</span> <span class="o">=</span> <span class="nx">eventTemplate</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;EventView init&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">view</span> <span class="o">=</span> <span class="k">this</span><span class="p">,</span> <span class="nx">rendered</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">rendered</span> <span class="o">=</span> <span class="nx">Mustache</span><span class="p">.</span><span class="nx">to_html</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">template</span><span class="p">,</span> <span class="nx">view</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">());</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">el</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">rendered</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;EventView rendered&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">view</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">EventView</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Summary</h2>

<p>Mustache.js is the template library selected primarily because of the fact that the library is &#8220;logic-less&#8221; and also is a popular choice since <a href="http://mustache.github.com/" title="Mustache library">Mustache</a> is implemmented in a wide variety of languages. The fact that no logic is executed in rendering a Mustache template insures that bugs are highly unlikely to be caused due to some logic failing within the operation of executing the template method to render an object as HTML. Logic can be added to the Mustache template within the JavaScript code (e.g. a module for creating a View constructor) which allows for unit testing and debugging utilizing a breakpoint in the code. See the <a href="https://github.com/janl/mustache.js" title="Mustache.js source code and documentation on github">Mustache.js documentation</a> for using conditions, enumerable objects, partials an other Mustache interface functions to for authoring templates with JavaScript, HTML and JSON.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[File organization: building a framework using RequireJS]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/file-organization-building-a-framework-using-requirejs/2012/01/08/"/>
    <updated>2012-01-08T16:44:00-08:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/file-organization-building-a-framework-using-requirejs/2012/01/file-organization-building-a-framework-using-requirejs</id>
    <content type="html"><![CDATA[<p>When a JavaScript application is to complex or large to build in a single file, grouping the application&#8217;s components into packages allows for script dependencies to download in parallel; and facilitates only loading <strong>packaged</strong> and other modular code as the site experience requires the specific set of dependencies.</p>

<p>AMD and Require.JS provide the structure for writing modular code with dependencies. Backbone.js provides the code organization for developing models, views and collections and also interactions with a RESTful API. Below is an outline of the Web application&#8217;s file organization</p>

<h3>File organization</h3>

<p>Assume the following directories and file organization, with app.build.js as the build profile (a sibling to both source and release directories). Note that the files in the list below named <em>section</em> can be any component of the application, e.g. <em>header</em>, <em>login</em>)</p>

<p>This structure groups common (or site-wide) code of (core) <em>models</em>, <em>views</em>, <em>collections</em> which are extended from a base.js constructor. These base constructors extend the appropriate backbone method, e.g. Backbone.Model.</p>

<p>The <em>packages</em> directory organizes code by section / responsibility, e.g. cart, checkout, etc. Notice that within the example <em>header</em> package the directory structure is similar to the app root directory file structure.</p>

<p>A <em>package</em> (of modularized code) has dependencies from the common libraries in your application and also has specific code for the packages execution alone; other packages should not require another packages dependencies.</p>

<p>A <em>utils</em> directory has shims, helpers, and common library code to support the application.</p>

<p>A <em>syncs</em> directory to define persistence with your RESTful api and/or localStorage.</p>

<p>The <em>vendor</em> libraries folder will not be built, there is no need to do so.</p>

<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>.-- app.build.js
</span><span class='line'>|-- app-release
</span><span class='line'>`-- app-src
</span><span class='line'>    |-- collections
</span><span class='line'>    |   |-- base.js
</span><span class='line'>    |   |-- sections-segments.js
</span><span class='line'>    |   `-- sections.js
</span><span class='line'>    |-- docs
</span><span class='line'>    |   `--docco.css
</span><span class='line'>    |-- models
</span><span class='line'>    |   |-- base.js
</span><span class='line'>    |   |-- branding.js
</span><span class='line'>    |   `-- section.js
</span><span class='line'>    |-- packages
</span><span class='line'>    |   |-- header
</span><span class='line'>    |   |   |-- models
</span><span class='line'>    |   |   |   |-- nav.js
</span><span class='line'>    |   |   |   `-- link.js
</span><span class='line'>    |   |   |-- templates
</span><span class='line'>    |   |   |   |-- branding.js
</span><span class='line'>    |   |   |   |-- nav.js
</span><span class='line'>    |   |   |   `-- links.js
</span><span class='line'>    |   |   `-- views
</span><span class='line'>    |   |       |-- nav.js
</span><span class='line'>    |   |       |-- branding.js
</span><span class='line'>    |   |       `-- link.js
</span><span class='line'>    |   |-- header.js
</span><span class='line'>    |   `-- ... more packages here e.g. cart, checkout ...
</span><span class='line'>    |-- syncs
</span><span class='line'>    |   |-- rest
</span><span class='line'>    |   |   `-- sections.js
</span><span class='line'>    |   |-- factory.js
</span><span class='line'>    |   `-- localstorage.js
</span><span class='line'>    |-- test
</span><span class='line'>    |   |-- fixtures
</span><span class='line'>    |   |   `-- sections.json
</span><span class='line'>    |   |-- header
</span><span class='line'>    |   |   |-- index.html
</span><span class='line'>    |   |   `-- spec.js
</span><span class='line'>    |   |-- lib
</span><span class='line'>    |   |   `-- Jasmine
</span><span class='line'>    |   |-- models
</span><span class='line'>    |   |-- utils
</span><span class='line'>    |   |-- global-spec.js
</span><span class='line'>    |-- utils
</span><span class='line'>    |   |-- ajax.js
</span><span class='line'>    |   |-- baselib.js
</span><span class='line'>    |   |-- debug.js
</span><span class='line'>    |   |-- localstorage.js
</span><span class='line'>    |   `-- shims.js
</span><span class='line'>    |-- vendor
</span><span class='line'>    |-- |-- backbone-min.js
</span><span class='line'>    |   |-- jquery-1.7.1.min.js
</span><span class='line'>    |   |-- jquery.mobile-1.0.min.js
</span><span class='line'>    |   |-- json2.js
</span><span class='line'>    |   |-- modernizr-1.6.min.js
</span><span class='line'>    |   |-- mustache.js
</span><span class='line'>    |   |-- require.js
</span><span class='line'>    |   |-- text.js
</span><span class='line'>    |   `-- underscore.js
</span><span class='line'>    |-- views
</span><span class='line'>    |   |-- base.js
</span><span class='line'>    |   `-- collection.js
</span><span class='line'>    |-- application.js
</span><span class='line'>    |-- collections.js
</span><span class='line'>    |-- index.html
</span><span class='line'>    |-- main.js
</span><span class='line'>    |-- models.js
</span><span class='line'>    |-- syncs.js
</span><span class='line'>    |-- utils.js
</span><span class='line'>    |-- vendor.js
</span><span class='line'>    `-- views.js
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dependencies managed with require() and define()]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/dependencies-managed-with-require-and-define/2012/01/08/"/>
    <updated>2012-01-08T15:11:00-08:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/dependencies-managed-with-require-and-define/2012/01/dependencies-managed-with-require-and-define</id>
    <content type="html"><![CDATA[<h2>Modular Code Dependencies</h2>

<p>RequireJS and AMD (Asynchronous Module Definition) provide a pattern for authoring modular code and also managing dependencies without complex namespacing or even adding any properties to the (head) window object. When we write modules in JavaScript, we want to handle the reuse of code intelligently and have the option to build an entire application into a single script or load modules as they are required to execute the business requirements of the application.</p>

<ul>
<li><a href="http://requirejs.org/docs/requirements.html" title="RequireJS is designed to meet these requirements">RequireJS Requirements/Design</a></li>
<li><a href="https://github.com/jrburke/requirejs" title="requirejs on github">RequireJS Source</a></li>
<li><a href="http://requirejs.org/docs/whyamd.html" title="AMD benefits">Why AMD</a></li>
</ul>


<h3>Writing AMD modules with RequireJS</h3>

<p><em>Note - This section &#8220;Writing AMD modules with RequireJS&#8221; is an excerpt from <a href="https://github.com/addyosmani/backbone-fundamentals#modularjs" title="Backbone Fundamentals online book project by addyosmani">Backbone Fundamentals</a></em></p>

<p>The overall goal for the AMD format is to provide a solution for modular JavaScript that developers can use today. The two key concepts you need to be aware of when using it with a script-loader are a <code>define()</code> method for facilitating module definition and a <code>require()</code> method for handling dependency loading. <code>define()</code> is used to define named or unnamed modules based on the proposal using the following signature:</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">(</span>
</span><span class='line'>    <span class="nx">module_id</span> <span class="cm">/*optional*/</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="nx">dependencies</span><span class="p">]</span> <span class="cm">/*optional*/</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">definition</span> <span class="kd">function</span> <span class="cm">/*function for instantiating the module or object*/</span>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can tell by the inline comments, the <code>module_id</code> is an optional argument which is typically only required when non-AMD concatenation tools are being used (there may be some other edge cases where it&#8217;s useful too). When this argument is left out, we call the module &#8216;anonymous&#8217;. When working with anonymous modules, the idea of a module&#8217;s identity is DRY, making it trivial to avoid duplication of filenames and code.</p>

<p>Back to the define signature, the dependencies argument represents an array of dependencies which are required by the module you are defining and the third argument (&#8216;definition function&#8217;) is a function that&#8217;s executed to instantiate your module. A barebone module (compatible with RequireJS) could be defined using <code>define()</code> as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// A module ID has been omitted here to make the module anonymous</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;foo&#39;</span><span class="p">,</span> <span class="s1">&#39;bar&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="c1">// module definition function</span>
</span><span class='line'>    <span class="c1">// dependencies (foo and bar) are mapped to function parameters</span>
</span><span class='line'>    <span class="kd">function</span> <span class="p">(</span> <span class="nx">foo</span><span class="p">,</span> <span class="nx">bar</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// return a value that defines the module export</span>
</span><span class='line'>        <span class="c1">// (i.e the functionality we want to expose for consumption)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// create your module here</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">myModule</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">doStuff</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Yay! Stuff&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="nx">myModule</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>The main.js file bootstraps the Web application</h3>

<figure class='code'><figcaption><span> (main.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/main.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// main.js</span>
</span><span class='line'><span class="c1">// ------- </span>
</span><span class='line'><span class="c1">// See require.js, underscore.js, backbone.js</span>
</span><span class='line'><span class="c1">// Requires `require`, `define`</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">HL</span><span class="p">)</span> <span class="p">{</span> <span class="kd">var</span> <span class="nx">HL</span> <span class="o">=</span> <span class="p">{};</span> <span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">HL</span><span class="p">.</span><span class="nx">buildVersion</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">HL</span><span class="p">.</span><span class="nx">buildVersion</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Param (string) str is a path beginning with &#39;/&#39; (src directory)</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">str</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">str</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">HL</span><span class="p">.</span><span class="nx">buildVersion</span> <span class="o">!==</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">path</span> <span class="o">=</span> <span class="s1">&#39;/&#39;</span> <span class="o">+</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">buildVersion</span> <span class="o">+</span> <span class="nx">str</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">path</span><span class="p">;</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">require</span><span class="p">.</span><span class="nx">config</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">baseUrl</span><span class="o">:</span> <span class="s1">&#39;./&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">locale</span><span class="o">:</span> <span class="s1">&#39;en-us&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">paths</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// ** Libraries **</span>
</span><span class='line'>        <span class="s1">&#39;json2&#39;</span>        <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/json2.min&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;modernizr&#39;</span>    <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/modernizr.min&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;requirejquery&#39;</span><span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/require-jquery&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;jquery&#39;</span>       <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/jquery-1.7.2.min&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;zepto&#39;</span>        <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/zepto&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;underscore&#39;</span>   <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/underscore&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;mustache&#39;</span>     <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/mustache&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;backbone&#39;</span>     <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/backbone&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// r.js plugins</span>
</span><span class='line'>        <span class="s1">&#39;use&#39;</span>          <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/plugins/use&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;domready&#39;</span>     <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/plugins/domReady&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;order&#39;</span>        <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/plugins/order&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;text&#39;</span>         <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/plugins/text&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// jQuery plugins should be loaded in the facade.js file</span>
</span><span class='line'>        <span class="s1">&#39;jquerycookie&#39;</span> <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/plugins/jquery.cookie&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Zepto plugins should be loaded in the facade.js file</span>
</span><span class='line'>        <span class="c1">// these need the following order! type, callbacks, deferred</span>
</span><span class='line'>        <span class="s1">&#39;type&#39;</span>         <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/plugins/type&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;callbacks&#39;</span>    <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/plugins/callbacks&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;deferred&#39;</span>     <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/plugins/deferred&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Touch events</span>
</span><span class='line'>        <span class="s1">&#39;touch&#39;</span>        <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor/plugins/touch&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Facade references to vendor / library methods</span>
</span><span class='line'>        <span class="s1">&#39;facade&#39;</span>       <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/facade&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Vendor libs and plugin, packaged group of common dependencies</span>
</span><span class='line'>        <span class="s1">&#39;vendor&#39;</span>       <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/vendor&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Utilities, Mixins and HauteLook libraries</span>
</span><span class='line'>        <span class="s1">&#39;utils&#39;</span>        <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/utils&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// (Backbone) Syncs depend on both vendor and utils</span>
</span><span class='line'>        <span class="s1">&#39;syncs&#39;</span>        <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/syncs&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Should be used as required dependencies with use of `define`, </span>
</span><span class='line'>        <span class="s1">&#39;models&#39;</span>       <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/models&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;views&#39;</span>        <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/views&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;collections&#39;</span>  <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/collections&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;controller&#39;</span>   <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/controller&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// ** Packages **</span>
</span><span class='line'>
</span><span class='line'>        <span class="s1">&#39;chrome&#39;</span>       <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/packages/chrome&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;events&#39;</span>       <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/packages/events&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;catalog&#39;</span>      <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/packages/catalog&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;product&#39;</span>      <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/packages/product&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;hello&#39;</span>        <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/packages/hello&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// ** Application ** bootstrap for frontend app </span>
</span><span class='line'>        <span class="s1">&#39;application&#39;</span>  <span class="o">:</span> <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s1">&#39;/application&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">use</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;underscore&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">attach</span><span class="o">:</span> <span class="s2">&quot;_&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s2">&quot;backbone&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">deps</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;use!underscore&quot;</span><span class="p">,</span> <span class="s2">&quot;jquery&quot;</span><span class="p">],</span>
</span><span class='line'>            <span class="nx">attach</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">_</span><span class="p">,</span> <span class="nx">$</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="nx">Backbone</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">priority</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">,</span> <span class="s1">&#39;use&#39;</span><span class="p">,</span> <span class="s1">&#39;order&#39;</span><span class="p">,</span> <span class="s1">&#39;modernizr&#39;</span><span class="p">,</span> <span class="s1">&#39;json2&#39;</span><span class="p">,</span> <span class="s1">&#39;vendor&#39;</span><span class="p">,</span> <span class="s1">&#39;utils&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">jquery</span><span class="o">:</span> <span class="s1">&#39;1.7.2&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">waitSeconds</span><span class="o">:</span> <span class="mi">33</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">require</span><span class="p">([</span><span class="s1">&#39;facade&#39;</span><span class="p">,</span> <span class="s1">&#39;application&#39;</span><span class="p">,</span> <span class="s1">&#39;utils&#39;</span><span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">facade</span><span class="p">,</span>   <span class="nx">App</span><span class="p">,</span>           <span class="nx">utils</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">$</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">$</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Backbone</span> <span class="o">=</span> <span class="nx">facade</span><span class="p">.</span><span class="nx">Backbone</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">Channel</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">baselib</span><span class="p">.</span><span class="nx">Channel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">debug</span> <span class="o">=</span> <span class="nx">utils</span><span class="p">.</span><span class="nx">debug</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">cssArr</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>            <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s2">&quot;/css/base.css&quot;</span><span class="p">),</span>
</span><span class='line'>            <span class="nx">HL</span><span class="p">.</span><span class="nx">prependBuild</span><span class="p">(</span><span class="s2">&quot;/css/global.css&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// load style sheets</span>
</span><span class='line'>    <span class="nx">Channel</span><span class="p">(</span><span class="s1">&#39;load:css&#39;</span><span class="p">).</span><span class="nx">publish</span><span class="p">(</span><span class="nx">cssArr</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="c1">// doc ready</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">app</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">// run the application, it all starts here.</span>
</span><span class='line'>        <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;initialize application...&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">app</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">App</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">Backbone</span><span class="p">.</span><span class="nx">history</span><span class="p">.</span><span class="nx">start</span><span class="p">({</span><span class="nx">pushState</span><span class="o">:</span> <span class="kc">true</span><span class="p">});</span>
</span><span class='line'>        <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;...app router active&quot;</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">history</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Example of Backbone.js Model definition using AMD</h3>

<p>Below is an example of defining a Backbone Model object which returns a constructor rather than an instance. The recommended convention for naming variables is to use <em>Upper</em> <em>CamelCase</em> for constructors and <em>lower</em> <em>camelCase</em> for others.</p>

<figure class='code'><figcaption><span> (event.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/models/event.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Event Model</span>
</span><span class='line'><span class="c1">// -----------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Requires define</span>
</span><span class='line'><span class="c1">// Return {Event} constructor</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;models/base&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">BaseModel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">Event</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">Event</span> <span class="o">=</span> <span class="nx">BaseModel</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">defaults</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// v4 (JSON HAL) Events format...</span>
</span><span class='line'>            <span class="s2">&quot;_links&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s2">&quot;self&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s2">&quot;href&quot;</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="s2">&quot;http://hautelook.com/rels/catalog&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s2">&quot;href&quot;</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="s2">&quot;http://hautelook.com/rels/availability&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s2">&quot;href&quot;</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="s2">&quot;http://hautelook.com/rels/images/event-hero&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s2">&quot;href&quot;</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="s2">&quot;http://hautelook.com/rels/images/seals/event-hero&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s2">&quot;href&quot;</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="s2">&quot;http://hautelook.com/rels/images/seals/catalog-banner&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s2">&quot;href&quot;</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="s2">&quot;id&quot;</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">//&quot;13454&quot;,</span>
</span><span class='line'>            <span class="s2">&quot;title&quot;</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">//&quot;Pour La Victoire&quot;,</span>
</span><span class='line'>            <span class="s2">&quot;start_date&quot;</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">//&quot;2012-02-01 08:00:00&quot;,</span>
</span><span class='line'>            <span class="s2">&quot;end_date&quot;</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">//&quot;2012-02-03 08:00:00&quot;,</span>
</span><span class='line'>            <span class="s2">&quot;tagline&quot;</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">//&quot;Fashionable platform pumps and ballet flats&quot;,</span>
</span><span class='line'>            <span class="s2">&quot;status&quot;</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">//&quot;active&quot;,</span>
</span><span class='line'>            <span class="s2">&quot;visibility&quot;</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">//&quot;public&quot;,</span>
</span><span class='line'>            <span class="s2">&quot;sale_type&quot;</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">//&quot;default&quot;,</span>
</span><span class='line'>            <span class="s2">&quot;verticals&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="s2">&quot;vertical&quot;</span><span class="o">:</span> <span class="kc">null</span> <span class="cm">/* &quot;Women&quot; */</span> <span class="p">}</span> <span class="p">],</span>
</span><span class='line'>            <span class="s2">&quot;images&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s2">&quot;hero&quot;</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">// PARSED from _links data</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="s2">&quot;seals&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s2">&quot;hero&quot;</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="s2">&quot;nesting&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s2">&quot;parents&quot;</span><span class="o">:</span> <span class="p">[],</span>
</span><span class='line'>                <span class="s2">&quot;children&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="cm">/*{ &quot;id&quot;: &quot;12638&quot; },...*/</span> <span class="p">],</span>
</span><span class='line'>                <span class="s2">&quot;siblings&quot;</span><span class="o">:</span> <span class="p">[]</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">urlRoot</span><span class="o">:</span> <span class="s2">&quot;/v4/events&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">parse</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">data</span><span class="p">.</span><span class="nx">images</span> <span class="o">&amp;&amp;</span> <span class="nx">data</span><span class="p">.</span><span class="nx">_links</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">data</span><span class="p">.</span><span class="nx">images</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nx">hero</span><span class="o">:</span> <span class="nx">data</span><span class="p">.</span><span class="nx">_links</span><span class="p">[</span><span class="s2">&quot;http://hautelook.com/rels/images/event-hero&quot;</span><span class="p">].</span><span class="nx">href</span>
</span><span class='line'>                    <span class="p">};</span>
</span><span class='line'>                    <span class="nx">data</span><span class="p">.</span><span class="nx">images</span><span class="p">.</span><span class="nx">hero</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">images</span><span class="p">.</span><span class="nx">hero</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;event-small&quot;</span><span class="p">,</span> <span class="s2">&quot;event-large&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">data</span><span class="p">;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">Event</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Example of Backbone.js Collection definition using AMD</h3>

<p>The events collection defined below returns an instance of the Backbone Collection object. In this collection constructor &#8220;EventsCollection&#8221; the event model is assigned to the model property of the object literal used to extend the base collection object (pseudo class, as in JavaScript everything is an object). Notice that one of the required scripts is &#8220;models&#8221; which contains the &#8220;Event&#8221; constructor in an object which is referenced as the variable &#8220;models.Event&#8221;.</p>

<figure class='code'><figcaption><span>Events Collection  (events-example.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/collections/events-example.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Events Collection  </span>
</span><span class='line'><span class="c1">// -----------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// @requires `define`  </span>
</span><span class='line'><span class="c1">// @return {BaseCollection} EventsCollection instance</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">,</span><span class="s1">&#39;underscore&#39;</span><span class="p">,</span><span class="s1">&#39;models&#39;</span><span class="p">,</span><span class="s1">&#39;collections/base&#39;</span><span class="p">,</span><span class="s1">&#39;utils/debug&#39;</span><span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span>      <span class="nx">_</span><span class="p">,</span>           <span class="nx">models</span><span class="p">,</span>  <span class="nx">BaseCollection</span><span class="p">,</span>    <span class="nx">debug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">EventsCollection</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">eventsModel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">models</span><span class="p">.</span><span class="nx">EventsData</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">Event</span> <span class="o">=</span> <span class="nx">models</span><span class="p">.</span><span class="nx">Event</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">EventsCollection</span> <span class="o">=</span> <span class="nx">BaseCollection</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">model</span><span class="o">:</span> <span class="nx">Event</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">models</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// ...</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">// ...</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nx">EventsCollection</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>In the code above there is a <em>single var</em> statement which lists the local variables in the current scope. This is a best practice and encouraged so the developers have a common place to find the local variables for this module. Also it provide some syntax to how the code dependencies are used at the top of the module. For example the <em>eventsModel</em> is a new instance of the required <em>EventsData</em> constructor and <em>Event</em> is the constructor included in the required <em>models</em> object.</p>

<blockquote><p><em>The previous code examples that the objects used to extend when defining the constructors are : BaseModel and BaseCollection not Backbone.Model and Backbone.Collection. We are using base classes so that they may be extended similar to the use of an abstract class.</em></p></blockquote>

<h3>Grouping objects simplifies dependency management and also facilitates an organized build</h3>

<p>The strategy we are using for authoring modular and reusable code includes the use of site-wide or <em>global</em> objects as well as code organized in <em>packages</em> intended for specific components of the application. To provide global objects as dependencies which will be required by various packages we group (or wrap) common types of objects into a single object which can be <a href="http://requirejs.org/docs/optimization.html" title="RequireJS optimization/build script: r.js">optimized</a> in the build process with r.js. Grouping objects also helps to keep your list (array) of dependencies in the first argument of the (RequireJS) global <strong>define</strong> function call much cleaner and concise.</p>

<figure class='code'><figcaption><span>models  (models.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/models.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// List of models  </span>
</span><span class='line'><span class="c1">// --------------</span>
</span><span class='line'><span class="c1">// Models in this directory are intended for site-wide usage  </span>
</span><span class='line'>
</span><span class='line'><span class="c1">// This module is used with the r.js optimizer tool during build  </span>
</span><span class='line'><span class="c1">// See http://requirejs.org/docs/faq-optimization.html</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Requires `define`  See &lt;http://requirejs.org/docs/api.html#define&gt;  </span>
</span><span class='line'><span class="c1">// Returns {Object} model constructor references</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>        <span class="s2">&quot;models/application-state&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;models/base&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;models/event&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;models/member-summary&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;models/messaging&quot;</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span>
</span><span class='line'>        <span class="nx">ApplicationStateModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">BaseModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">EventModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">MemberSummaryModel</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">MessagingModel</span>
</span><span class='line'>        <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Add models in this same directory to this object, </span>
</span><span class='line'>    <span class="c1">// for use when requiring this module.</span>
</span><span class='line'>    <span class="c1">// grouping site-wide models in this module (object)</span>
</span><span class='line'>    <span class="c1">// optimizes the performance and keeps dependencies organized</span>
</span><span class='line'>    <span class="c1">// when the (build) optimizer is run.</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;ApplicationStateModel&quot;</span><span class="o">:</span> <span class="nx">ApplicationStateModel</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;BaseModel&quot;</span><span class="o">:</span> <span class="nx">BaseModel</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;EventModel&quot;</span><span class="o">:</span> <span class="nx">EventModel</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;MemberSummaryModel&quot;</span><span class="o">:</span> <span class="nx">MemberSummaryModel</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;MessagingModel&quot;</span><span class="o">:</span> <span class="nx">MessagingModel</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Wrapper: Utils Library</h4>

<p>Another example of grouping objects for a base library used to extend our base objects e.g. BaseModel&#8230;</p>

<figure class='code'><figcaption><span>utils  (utils.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/utils.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// List of utility libraries</span>
</span><span class='line'><span class="c1">// -------------------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// this module is used with the r.js optimizer tool during build  </span>
</span><span class='line'><span class="c1">// See http://requirejs.org/docs/faq-optimization.html</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Requires `define` see &lt;http://requirejs.org/docs/api.html#define&gt;  </span>
</span><span class='line'><span class="c1">// Returns {Object} reference to utiltiy modules</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>       <span class="s2">&quot;utils/ajax-options&quot;</span><span class="p">,</span>
</span><span class='line'>       <span class="s2">&quot;utils/baselib&quot;</span><span class="p">,</span>
</span><span class='line'>       <span class="s2">&quot;utils/cookies&quot;</span><span class="p">,</span>
</span><span class='line'>       <span class="s2">&quot;utils/storage&quot;</span><span class="p">,</span>
</span><span class='line'>       <span class="s2">&quot;utils/debug&quot;</span><span class="p">,</span>
</span><span class='line'>       <span class="s2">&quot;utils/date&quot;</span><span class="p">,</span>
</span><span class='line'>       <span class="s2">&quot;utils/shims&quot;</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span>
</span><span class='line'>        <span class="nx">ajaxOptions</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">baselib</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">docCookies</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">storage</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">debug</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">parseDate</span>
</span><span class='line'>        <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;ajaxOptions&quot;</span><span class="o">:</span> <span class="nx">ajaxOptions</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;baselib&quot;</span><span class="o">:</span> <span class="nx">baselib</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;docCookies&quot;</span><span class="o">:</span> <span class="nx">docCookies</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;storage&quot;</span><span class="o">:</span> <span class="nx">storage</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;debug&quot;</span><span class="o">:</span> <span class="nx">debug</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;parseDate&quot;</span><span class="o">:</span> <span class="nx">parseDate</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="c1">// the shim only extend JavaScript when needed, e.g. Object.create</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Events Collection</h4>

<p>The events collection object can be <em>extended</em> to further segment the collection for specific lists presented to site visitors. In the example below the required script <em>&#8216;collections/events&#8217;</em> returns an instance, however the instance&#8217;s constructor is easily referenced like so <em>eventsCollection.constructor</em> and extended to create a new constructor which will have methods to filter the collection by segment.</p>

<h4>Events Segments Collection</h4>

<figure class='code'><figcaption><span>Events Segments Collection  (events-segments-example.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/collections/events-segments-example.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Events Segments Collection  </span>
</span><span class='line'><span class="c1">// -----------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// @requires `define`  </span>
</span><span class='line'><span class="c1">// @return {Array} `segments` multi-dimensional array[schedule][type] </span>
</span><span class='line'><span class="c1">// with collection {EventsSegmentCollection} instances</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">,</span><span class="s1">&#39;underscore&#39;</span><span class="p">,</span><span class="s1">&#39;collections/events&#39;</span><span class="p">,</span><span class="s1">&#39;utils/baselib&#39;</span><span class="p">,</span><span class="s1">&#39;utils/debug&#39;</span><span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span>      <span class="nx">_</span><span class="p">,</span>           <span class="nx">eventsCollection</span><span class="p">,</span>    <span class="nx">baselib</span><span class="p">,</span>        <span class="nx">debug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">EventsSegmentCollection</span><span class="p">,</span> <span class="nx">types</span><span class="p">,</span> <span class="nx">schedules</span><span class="p">,</span> <span class="nx">segments</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Subclass for creating specific segments of a collection</span>
</span><span class='line'>    <span class="nx">EventsSegmentCollection</span> <span class="o">=</span> <span class="nx">eventsCollection</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">model</span><span class="o">:</span> <span class="nx">eventsCollection</span><span class="p">.</span><span class="nx">model</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// ...</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Methods to filter collection and match schedule and/or type</span>
</span><span class='line'>        <span class="nx">selectFilters</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">collection</span> <span class="o">=</span> <span class="k">this</span><span class="p">,</span> <span class="nx">models</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// ... </span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="nx">models</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create segmented collections from the events collection</span>
</span><span class='line'>    <span class="nx">schedules</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;today&#39;</span><span class="p">,</span> <span class="s1">&#39;ending_soon&#39;</span> <span class="cm">/*, &#39;upcoming&#39; */</span> <span class="p">];</span>
</span><span class='line'>    <span class="nx">types</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Beauty&#39;</span><span class="p">,</span> <span class="s1">&#39;Getaways&#39;</span><span class="p">,</span> <span class="s1">&#39;Home&#39;</span><span class="p">,</span> <span class="s1">&#39;Kids&#39;</span><span class="p">,</span> <span class="s1">&#39;Men&#39;</span><span class="p">,</span> <span class="s1">&#39;Women&#39;</span><span class="p">,</span> <span class="s1">&#39;All&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// segments are combinations of schedules and types, e.g. `today` and `Beauty`</span>
</span><span class='line'>    <span class="nx">segments</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// iterate over schedules and types to build new collections by segments</span>
</span><span class='line'>    <span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">schedules</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">schedule</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">segments</span><span class="p">[</span><span class="nx">schedule</span><span class="p">]</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>        <span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">types</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">segments</span><span class="p">[</span><span class="nx">schedule</span><span class="p">][</span><span class="nx">type</span><span class="p">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">EventsSegmentCollection</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>                <span class="s2">&quot;type&quot;</span> <span class="o">:</span> <span class="nx">type</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;schedule&quot;</span> <span class="o">:</span> <span class="nx">schedule</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">segments</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>The truncated module above returns a multi-dimensional &#8220;array[schedule][type]&#8221; using the extended constructor. This module is useful throughout the application where ever segments of the events are listed and presented in various formats whether in a menu, list or as graphic slides the data is common and already segmented as required for the business of the application.</p>

<h3>Defining a module with non-JavaScript dependencies like a Mustache html template</h3>

<p>The view module below needs an HTML template file written for use with the template library Mustache. The required template <code>'text!packages/header/templates/nav.html'</code> has the prefix <code>text!</code> which is a <a href="http://requirejs.org/docs/download.html#plugins" title="RequireJS text! plugin">plugin</a> to the RequireJS library.</p>

<ul>
<li><a href="http://mustache.github.com/" title="Mustache library">Mustache</a></li>
<li><a href="https://github.com/janl/mustache.js" title="Mustache.js source code and documentation on github">mustache.js source</a></li>
</ul>


<figure class='code'><figcaption><span>header nav view  (nav.js)</span> <a href='http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/downloads/code/javascript/packages/header/views/nav.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// header nav view </span>
</span><span class='line'><span class="c1">// ---------------</span>
</span><span class='line'><span class="c1">// @requires define</span>
</span><span class='line'><span class="c1">// @return {NavView} view constructor object</span>
</span><span class='line'>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">,</span><span class="s1">&#39;underscore&#39;</span><span class="p">,</span><span class="s1">&#39;views/base&#39;</span><span class="p">,</span><span class="s1">&#39;text!packages/header/templates/nav.html&#39;</span><span class="p">,</span><span class="s1">&#39;mustache&#39;</span><span class="p">,</span><span class="s1">&#39;utils/debug&#39;</span><span class="p">],</span>
</span><span class='line'><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span>      <span class="nx">_</span><span class="p">,</span>           <span class="nx">BaseView</span><span class="p">,</span>    <span class="nx">navTemplate</span><span class="p">,</span>                              <span class="nx">Mustache</span><span class="p">,</span>  <span class="nx">debug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// global header view</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">NavView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">NavView</span> <span class="o">=</span> <span class="nx">BaseView</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;navView init&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">template</span> <span class="o">=</span> <span class="nx">navTemplate</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">NavView</span><span class="p">.</span><span class="nx">__super__</span><span class="p">.</span><span class="nx">initialize</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">arguments</span><span class="p">);</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// ...</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">NavView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Summary</h2>

<p>Functions require() and define() on the head object (window) are created by the <a href="http://requirejs.org/" title="RequireJS site">RequireJS library</a> and are strategic in authoring modular and reusable code. The function <strong>require()</strong> is used in the main.js to kick off the application; main.js is referenced in our html file in a script object or could be using in an inline script as well. The call to require() has as the first argument an array of the required scripts which are referenced in the second argument&#8217;s anonymous function definition which is used as a callback. When the requirements are ready they are passed to the function which lists the arguments by name giving reference to the returned objects of each required script. The <strong>define()</strong> function works the same way as require() using an array as the list of dependencies; however define() is called to <em>define</em> a module of code. the RequireJS library also has plugins to load non-JavaScript dependencies, e.g. Mustache template files, to reference the plugin use the prefix <em>text!</em>. All scripts in the Web application framework should use these two methods which provide the closures and scope for authoring modular code in JavaScript; it is not necessary to add any properties to the head (window) object.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backbone.js : list of best practices]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-dot-js-list-of-best-practices/2012/01/07/"/>
    <updated>2012-01-07T20:30:00-08:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-dot-js-list-of-best-practices/2012/01/backbone-dot-js-list-of-best-practices</id>
    <content type="html"><![CDATA[<h2>Documentation:</h2>

<h3>Frontend Framework built with Backbone.js, Require.JS</h3>

<ul>
<li><a href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/dependencies-managed-with-require-and-define/2012/01/08/">Dependencies via require() or define()</a></li>
<li><a href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/file-organization-building-a-framework-using-requirejs/2012/01/08/">File Organization</a></li>
<li><a href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-views-using-mustache-templates/2012/01/08/">Mustache Templates</a></li>
<li><a href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/base-classes-with-custom-library-functions-added-to-backbone-dot-js-constructors/2012/01/09/">Base classes - constructor objects</a></li>
<li><a href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-dot-js-and-mustache-dot-js-small-views-and-templates/2012/01/09/">Small Views and Templates</a></li>
<li><a href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/backbone-dot-js-collectionview-to-utilize-a-collection-rather-than-a-model/2012/01/09/">CollectionView and ViewManager</a></li>
<li><a href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/optimize-and-build-a-backbone-dot-js-javascript-application-with-require-dot-js-using-packages/2012/01/09/">RequireJS Optimizer build process</a></li>
</ul>


<!--more-->


<h2>Standards</h2>

<ul>
<li>No &#8220;var that = this;&#8221; usage

<ul>
<li>be descriptive if assigning this to a variable</li>
<li>try not to pass &#8220;this&#8221; as context as much as possible</li>
</ul>
</li>
<li>Use Backbone, Underscore and RequireJS conventions as much as possible

<ul>
<li>the frontend favors convention over configuration</li>
</ul>
</li>
<li>Use the CollectionView for managing a the relationship between a Collection and the View that relates to those models.</li>
<li>Need to define a more formal ViewManager class or define a set of best practices</li>
<li>The Backbone.Model.parse method should only be used for things like virtual fields

<ul>
<li>example: the member model may create a name field that concats first and last names</li>
<li>most parsing should be done on the sync specific to that version</li>
</ul>
</li>
<li>Use small views and templates

<ul>
<li>rendering (and re*rendering) is faster and the DOM is easier to maintain</li>
</ul>
</li>
<li>All dependencies must go through RequireJS require() or define() functions

<ul>
<li>no global state even for jQuery, Backbone, Underscore, etc</li>
</ul>
</li>
<li>No manual jQuery DOM manipulation

<ul>
<li>the DOM fragments should be rendered through the View objects</li>
</ul>
</li>
<li>No logic in the templates

<ul>
<li>too hard to test the logic</li>
<li>use Mustache templates only</li>
</ul>
</li>
<li>Base classes are used for Models, Collections, and Views to add common behavior</li>
<li>Unit tests <code>should</code> be maintained using Jasmine (BDD style) for site*wide scripts:

<ul>
<li>e.g. models, views, collections, base classes and (utils) libraries</li>
</ul>
</li>
<li>Comments should use <code>//</code> syntax, and also may include markdown syntax

<ul>
<li><code>docco</code> documentation generator parsed best with <code>//</code>.</li>
<li>Routinely run <code>docco</code> (node package) to generate documentation (html files)

<ul>
<li>at least, following major releases.</li>
</ul>
</li>
</ul>
</li>
<li>Maintain examples by documenting best practices (Backbone and RequireJS) within code repository

<ul>
<li><code>docco</code> generates a <code>docs</code> folder; each package should have a docs folder</li>
<li>docs folder has implementation notes highlighting frontend standards.</li>
</ul>
</li>
<li>Document the build process using RequireJS Optimizer</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building a framework with Backbone.js]]></title>
    <link href="http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/building-framework-with-backbone/2012/01/07/"/>
    <updated>2012-01-07T20:00:00-08:00</updated>
    <id>http://pixelhandler.github.com/vertebrae http://pixelhandler.github.com/vertebrae/notes/building-framework-with-backbone/2012/01/building-framework-with-backbone</id>
    <content type="html"><![CDATA[<p>Below is a collection of links for code documentation and learning about the preferred libraries for building a JavaScript web application. The libraries selected provide code organization, script/file loading, dependency management, utility library, DOM manipulation, and ajax support for asynchronous application development and interaction with a REST api.</p>

<h2>Web book</h2>

<p><strong>Backbone.js Fundamentals</strong> - <a href="https://github.com/addyosmani/backbone-fundamentals">https://github.com/addyosmani/backbone-fundamentals</a></p>

<p>A creative-commons book on Backbone.js for beginners and advanced users
alike. How to write modular JavaScript apps for desktop and mobile</p>

<h2>Learning from the source</h2>

<p><strong>Source code documentation</strong></p>

<ul>
<li><a href="http://documentcloud.github.com/backbone/">http://documentcloud.github.com/backbone/</a></li>
<li><a href="http://documentcloud.github.com/backbone/docs/backbone.html">http://documentcloud.github.com/backbone/docs/backbone.html</a></li>
<li><a href="http://documentcloud.github.com/underscore/">http://documentcloud.github.com/underscore/</a></li>
<li><a href="http://requirejs.org/">http://requirejs.org/</a></li>
<li><a href="http://requirejs.org/docs/whyamd.html">http://requirejs.org/docs/whyamd.html</a></li>
<li><a href="http://mustache.github.com/">http://mustache.github.com/</a> | <a href="https://github.com/janl/mustache.js/">https://github.com/janl/mustache.js/</a></li>
</ul>


<!--more-->


<p><strong>Code examples</strong></p>

<ul>
<li><a href="https://github.com/addyosmani/todomvc/tree/master/todo-example/backbone">https://github.com/addyosmani/todomvc/tree/master/todo-example/backbone</a></li>
<li><a href="https://github.com/thomasdavis/backbonetutorials/tree/gh-pages/examples/modular-backbone">https://github.com/thomasdavis/backbonetutorials/tree/gh-pages/examples/modular-backbone</a></li>
</ul>


<p><strong>Demos</strong></p>

<ul>
<li><a href="http://addyosmani.github.com/todomvc/todo-example/backbone/index.html">http://addyosmani.github.com/todomvc/todo-example/backbone/index.html</a></li>
</ul>


<p><strong>Tutorials</strong></p>

<ul>
<li><a href="http://backbonetutorials.com/organizing-backbone-using-modules/">http://backbonetutorials.com/organizing-backbone-using-modules/</a></li>
<li><a href="https://github.com/documentcloud/backbone/wiki/Tutorials,-blog-posts-and-example-sites">https://github.com/documentcloud/backbone/wiki/Tutorials,-blog-posts-and-example-sites</a></li>
</ul>


<p><strong>Videos</strong></p>

<ul>
<li><a href="http://peepcode.com/products/backbone-js">http://peepcode.com/products/backbone-js</a></li>
<li><a href="http://backbonescreencasts.com/">http://backbonescreencasts.com/</a></li>
</ul>


<p><strong>Unit Testing</strong></p>

<ul>
<li><a href="https://github.com/pivotal/jasmine/wiki/Suites-and-specs">https://github.com/pivotal/jasmine/wiki/Suites-and-specs</a></li>
<li><a href="http://pivotal.github.com/jasmine/jsdoc/symbols/jasmine.Matchers.html">http://pivotal.github.com/jasmine/jsdoc/symbols/jasmine.Matchers.html</a></li>
<li><a href="https://github.com/pivotal/jasmine/wiki/Asynchronous-specs">https://github.com/pivotal/jasmine/wiki/Asynchronous-specs</a></li>
<li><a href="http://sinonjs.org/">http://sinonjs.org/</a> | <a href="http://sinonjs.org/docs/">http://sinonjs.org/docs/</a></li>
<li><a href="http://tinnedfruit.com/2011/03/03/testing-backbone-apps-with-jasmine-sinon.html">http://tinnedfruit.com/2011/03/03/testing-backbone-apps-with-jasmine-sinon.html</a></li>
<li><a href="http://tinnedfruit.com/2011/03/25/testing-backbone-apps-with-jasmine-sinon-2.html">http://tinnedfruit.com/2011/03/25/testing-backbone-apps-with-jasmine-sinon-2.html</a></li>
<li><a href="http://tinnedfruit.com/2011/04/26/testing-backbone-apps-with-jasmine-sinon-3.html">http://tinnedfruit.com/2011/04/26/testing-backbone-apps-with-jasmine-sinon-3.html</a></li>
</ul>


<h2>Community / Projects</h2>

<p><strong>Apps</strong></p>

<ul>
<li><a href="http://nrabinowitz.github.com/gapvis/#index">http://nrabinowitz.github.com/gapvis/#index</a></li>
</ul>


<p><strong>Blog Posts</strong></p>

<ul>
<li><a href="http://googleancientplaces.wordpress.com/">http://googleancientplaces.wordpress.com/</a></li>
<li><a href="http://www.netmagazine.com/tutorials/use-backbonejs-speed-interactions">http://www.netmagazine.com/tutorials/use-backbonejs-speed-interactions</a></li>
</ul>


<p><strong>Code</strong></p>

<ul>
<li><a href="https://github.com/zurb/flickrbomb">https://github.com/zurb/flickrbomb</a></li>
</ul>


<p><strong>Community</strong></p>

<ul>
<li><strong>Stackoverflow</strong> - <a href="http://stackoverflow.com/questions/tagged/backbone.js">http://stackoverflow.com/questions/tagged/backbone.js</a></li>
<li><strong>irc</strong> - <code>#documentcloud</code> on irc.freenode.net</li>
<li><strong>Forum</strong> - <a href="https://groups.google.com/forum/#!forum/backbonejs">https://groups.google.com/forum/#!forum/backbonejs</a></li>
<li><strong>tweets</strong> - @documentcloud</li>
</ul>


<h3>jQuery Mobile</h3>

<ul>
<li><a href="http://jquerymobile.com/demos/1.0/">http://jquerymobile.com/demos/1.0/</a></li>
<li><a href="http://jquerymobile.com/test/docs/api/themes.html">http://jquerymobile.com/test/docs/api/themes.html</a></li>
<li><a href="http://docs.jquery.com/">http://docs.jquery.com/</a></li>
</ul>


<h2>Miscellaneous</h2>

<p><strong>Similar MVC projects</strong></p>

<ul>
<li>Ember.JS - <a href="http://www.emberjs.com/">http://www.emberjs.com/</a></li>
</ul>


<p><strong>General JavaScript / jQuery learning&#8230;</strong></p>

<ul>
<li>Interactive way to learn about javascript&#8230; <a href="http://www.codecademy.com/">http://www.codecademy.com/</a></li>
<li><a href="http://jqfundamentals.com/">http://jqfundamentals.com/</a></li>
<li><a href="http://learn.appendto.com/">http://learn.appendto.com/</a></li>
<li><a href="http://docs.jquery.com/Tutorials">http://docs.jquery.com/Tutorials</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
